{
    "swagger": "2.0",
    "info": {
        "title": "Secuconnect API",
        "version": "2.0.0"
    },
    "host": "connect.secucard.com",
    "basePath": "/api/v2",
    "schemes": [
        "https"
    ],
    "paths": {
        "/Document/Uploads": {
            "post": {
                "tags": [
                    "documentUploads"
                ],
                "summary": "POST Document/Uploads",
                "description": "Store uploaded file",
                "parameters": [
                    {
                        "name": "content",
                        "in": "body",
                        "description": "Content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DocumentUploadsDTOContent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document uploaded",
                        "schema": {
                            "$ref": "#/definitions/DocumentUploadsBaseProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Document/Uploads?multipart": {
            "post": {
                "tags": [
                    "documentUploads"
                ],
                "summary": "POST Document/Uploads",
                "description": "Store uploaded file",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "fileToUpload",
                        "in": "formData",
                        "description": "File to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document uploaded",
                        "schema": {
                            "$ref": "#/definitions/DocumentUploadsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/General/Merchants": {
            "get": {
                "tags": [
                    "generalMerchants"
                ],
                "summary": "GET General/Merchants",
                "description": "Get a list of general merchants",
                "operationId": "getAll",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of general merchants",
                        "schema": {
                            "title": "GeneralMerchantsList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing general merchants",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET General/Merchants",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GeneralMerchantsProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/General/Merchants/{generalMerchantId}": {
            "get": {
                "tags": [
                    "generalMerchants"
                ],
                "summary": "GET General/Merchants/{generalMerchantId}",
                "description": "Get one general merchant for a specific id",
                "operationId": "getOne",
                "parameters": [
                    {
                        "name": "generalMerchantId",
                        "in": "path",
                        "description": "General merchant id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns general merchant for a specific id",
                        "schema": {
                            "$ref": "#/definitions/GeneralMerchantsProductModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "generalMerchants"
                ],
                "summary": "PUT General/Merchants/{generalMerchantId}",
                "description": "Update general merchant",
                "operationId": "updateMerchant",
                "parameters": [
                    {
                        "name": "generalMerchantId",
                        "in": "path",
                        "description": "General merchant id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "General merchant properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GeneralMerchantsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated general merchant",
                        "schema": {
                            "$ref": "#/definitions/GeneralMerchantsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/General/Stores": {
            "get": {
                "tags": [
                    "generalStores"
                ],
                "summary": "GET General/Stores",
                "description": "Get a list of general stores",
                "operationId": "getAll",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of general stores",
                        "schema": {
                            "title": "GeneralStoresList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing general stores",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET General/Stores",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GeneralStoresProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "generalStores"
                ],
                "summary": "POST General/Stores",
                "description": "Create general store",
                "operationId": "addStore",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "General store properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GeneralStoresDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "General store",
                        "schema": {
                            "$ref": "#/definitions/GeneralStoresProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/General/Stores/{generalStoreId}": {
            "get": {
                "tags": [
                    "generalStores"
                ],
                "summary": "GET General/Stores/{generalStoreId}",
                "description": "Get one general store for a specific id",
                "operationId": "getOne",
                "parameters": [
                    {
                        "name": "generalStoreId",
                        "in": "path",
                        "description": "General store id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns general store for a specific id",
                        "schema": {
                            "$ref": "#/definitions/GeneralStoresProductModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "generalStores"
                ],
                "summary": "PUT General/Stores/{generalStoreId}",
                "description": "Update general store",
                "operationId": "updateStore",
                "parameters": [
                    {
                        "name": "generalStoreId",
                        "in": "path",
                        "description": "General store id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "General store properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GeneralStoresDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated general store",
                        "schema": {
                            "$ref": "#/definitions/GeneralStoresProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/General/Stores/{generalStoreId}/checkin": {
            "post": {
                "tags": [
                    "generalStores"
                ],
                "summary": "POST General/Stores/{generalStoreId}/checkin",
                "description": "Check in",
                "operationId": "checkIn",
                "parameters": [
                    {
                        "name": "generalStoreId",
                        "in": "path",
                        "description": "General store id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Type",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GeneralStoresDTOType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned value is true or false",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/General/Stores/{generalStoreId}/assign/{googleKey}": {
            "post": {
                "tags": [
                    "generalStores"
                ],
                "summary": "POST General/Stores/{generalStoreId}/assign/{googleKey}",
                "description": "Assign some object to general store",
                "operationId": "assignGoogleKey",
                "parameters": [
                    {
                        "name": "generalStoreId",
                        "in": "path",
                        "description": "General store id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "googleKey",
                        "in": "path",
                        "description": "Google key",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If a general store hasn't assigned earlier, the returned value is true",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/General/Stores/{generalStoreId}/setDefault": {
            "post": {
                "tags": [
                    "generalStores"
                ],
                "summary": "POST General/Stores/{generalStoreId}/setDefault",
                "description": "Set default flag on general store",
                "operationId": "setDefault",
                "parameters": [
                    {
                        "name": "generalStoreId",
                        "in": "path",
                        "description": "General store id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Reason",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GeneralStoresDTOReason"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "In the most cases returned value is true",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/Cardgroups": {
            "get": {
                "tags": [
                    "loyaltyCardgroups"
                ],
                "summary": "GET Loyalty/Cardgroups",
                "description": "Get a list of loyalty card groups",
                "operationId": "getAll",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of loyalty card groups",
                        "schema": {
                            "title": "LoyaltyCardgroupsList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing loyalty card groups",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Loyalty/Cardgroups",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LoyaltyCardgroupsProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "loyaltyCardgroups"
                ],
                "summary": "POST Loyalty/Cardgroups",
                "description": "Add loyalty card group",
                "operationId": "addCardGroup",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Loyalty card group properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCardgroupsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Added loyalty card group",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCardgroupsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/Cardgroups/{loyaltyCardGroupId}": {
            "get": {
                "tags": [
                    "loyaltyCardgroups"
                ],
                "summary": "GET Loyalty/Cardgroups/{loyaltyCardGroupId}",
                "description": "Get loyalty card group for a specific id",
                "operationId": "getOne",
                "parameters": [
                    {
                        "name": "loyaltyCardGroupId",
                        "in": "path",
                        "description": "Search one by provided id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns loyalty card group for a specific id",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCardgroupsProductModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "loyaltyCardgroups"
                ],
                "summary": "PUT Loyalty/Cardgroups/{loyaltyCardGroupId}",
                "description": "Update loyalty card group",
                "operationId": "updateCardGroup",
                "parameters": [
                    {
                        "name": "loyaltyCardGroupId",
                        "in": "path",
                        "description": "Loyalty card group id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Loyalty card group properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCardgroupsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated loyalty card group",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCardgroupsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/Cardgroups/{loyaltyCardGroupId}/checkPasscodeEnabled": {
            "post": {
                "tags": [
                    "loyaltyCardgroups"
                ],
                "summary": "POST Loyalty/Cardgroups/{loyaltyCardGroupId}/checkPasscodeEnabled",
                "description": "Check whether passcode check is enabled",
                "operationId": "checkPassCodeEnabled",
                "parameters": [
                    {
                        "name": "loyaltyCardGroupId",
                        "in": "path",
                        "description": "Loyalty card group id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Check passcode details",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCardgroupsDTOCheckPasscodeEnabled"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checked successfully",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/Cards": {
            "get": {
                "tags": [
                    "loyaltyCards"
                ],
                "summary": "GET Loyalty/Cards",
                "description": "Get a list of loyalty cards",
                "operationId": "getAll",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of loyalty cards",
                        "schema": {
                            "title": "LoyaltyCardsList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing loyalty cards",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Loyalty/Cards",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LoyaltyCardsProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/Loyalty/Cards/{loyaltyCardId}": {
            "get": {
                "tags": [
                    "loyaltyCards"
                ],
                "summary": "GET Loyalty/Cards/{loyaltyCardId}",
                "description": "Get loyalty card for a specific id",
                "operationId": "getOne",
                "parameters": [
                    {
                        "name": "loyaltyCardId",
                        "in": "path",
                        "description": "Search one loyalty card by provided id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns loyalty card for a specific id",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCardsProductModel"
                        }
                    }
                }
            }
        },
        "/Loyalty/Cards/{loyaltyCardId}/assignUser/{generalAccountId}": {
            "post": {
                "tags": [
                    "loyaltyCards"
                ],
                "summary": "POST Loyalty/Cards/{loyaltyCardId}/assignUser/{generalAccountId}",
                "description": "Assign loyalty card to specific user account",
                "operationId": "assignUser",
                "parameters": [
                    {
                        "name": "loyaltyCardId",
                        "in": "path",
                        "description": "Loyalty card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "generalAccountId",
                        "in": "path",
                        "description": "General account id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Loyalty card pin",
                        "in": "body",
                        "description": "Loyalty card pin for the specific card",
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns true if loyalty card was assigned to user successful, false in other case",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "loyaltyCards"
                ],
                "summary": "DELETE Loyalty/Cards/{loyaltyCardId}/assignUser/{generalAccountId}",
                "description": "Remove assigned loyalty card from specific user account",
                "operationId": "removeAssignedUser",
                "parameters": [
                    {
                        "name": "loyaltyCardId",
                        "in": "path",
                        "description": "Loyalty card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "generalAccountId",
                        "in": "path",
                        "description": "General account id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns true if loyalty card assign was removed from user successful, false in other case",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/Customers": {
            "get": {
                "tags": [
                    "loyaltyCustomers"
                ],
                "summary": "GET Loyalty/Customers",
                "description": "Get a list of loyalty customers",
                "operationId": "getAll",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of loyalty customers",
                        "schema": {
                            "title": "LoyaltyCustomersList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing loyalty customers",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Loyalty/Customers",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LoyaltyCustomersProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "loyaltyCustomers"
                ],
                "summary": "POST Loyalty/Customers",
                "description": "Add loyalty customer",
                "operationId": "addCustomer",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "loyalty Customer container properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCustomersDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created loyalty Customer",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCustomersProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/Customers/{loyaltyCustomerId}": {
            "get": {
                "tags": [
                    "loyaltyCustomers"
                ],
                "summary": "GET Loyalty/Customers/{loyaltyCustomerId}",
                "description": "Get loyalty customer for a specific id",
                "operationId": "getOne",
                "parameters": [
                    {
                        "name": "loyaltyCustomerId",
                        "in": "path",
                        "description": "Search one loyalty customer by provided id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns loyalty customer for a specific id",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCustomersProductModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "loyaltyCustomers"
                ],
                "summary": "PUT Loyalty/Customers/{loyaltyCustomerId}",
                "description": "Function to update customer's data",
                "operationId": "updateCustomer",
                "parameters": [
                    {
                        "name": "loyaltyCustomerId",
                        "in": "path",
                        "description": "loyalty Customer Id CUS_XXX",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "loyalty Customer container properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCustomersDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created loyalty Customer",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCustomersProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "loyaltyCustomers"
                ],
                "summary": "DELETE Loyalty/Customers/{loyaltyCustomerId}",
                "description": "Remove assigned loyalty customer",
                "operationId": "removeCustomer",
                "parameters": [
                    {
                        "name": "loyaltyCustomerId",
                        "in": "path",
                        "description": "Loyalty customer id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns true if loyalty customer was removed",
                        "schema": {
                            "title": "LoyaltyCustomersRemoved",
                            "properties": {
                                "deleted": {
                                    "description": "Result is true or false",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/Customers/{loyaltyCustomerId}/assignPaymentContainer/{loyaltyPaymentContainerId}": {
            "post": {
                "tags": [
                    "loyaltyCustomers"
                ],
                "summary": "POST Loyalty/Customers/{loyaltyCustomerId}/assignPaymentContainer/{loyaltyPaymentContainerId}",
                "description": "Assigns LoyaltyPaymentContainer to customer",
                "operationId": "AssignPaymentContainer",
                "parameters": [
                    {
                        "name": "loyaltyCustomerId",
                        "in": "path",
                        "description": "Loyalty customer id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "loyaltyPaymentContainerId",
                        "in": "path",
                        "description": "LoyaltyPaymentContainer id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "loyalty Customers data",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCustomersProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "loyaltyCustomers"
                ],
                "summary": "DELETE Loyalty/Customers/{loyaltyCustomerId}/assignPaymentContainer/{loyaltyPaymentContainerId}",
                "description": "Removes an assigned LoyaltyPaymentContainer from customer",
                "operationId": "removeAssignedPaymentContainer",
                "parameters": [
                    {
                        "name": "loyaltyCustomerId",
                        "in": "path",
                        "description": "Loyalty customer id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "loyaltyPaymentContainerId",
                        "in": "path",
                        "description": "LoyaltyPaymentContainer id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "loyalty Customers data",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCustomersProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/Customers/{loyaltyCustomerId}/checkDuplicated/": {
            "post": {
                "tags": [
                    "loyaltyCustomers"
                ],
                "summary": "POST Loyalty/Customers/{loyaltyCustomerId}/checkDuplicated/",
                "description": "check if there are duplicated customers for a given merchant",
                "operationId": "checkForDuplicates",
                "parameters": [
                    {
                        "name": "loyaltyCustomerId",
                        "in": "path",
                        "description": "Loyalty customer id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns duplicated customers and customers without merchantcard",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards": {
            "get": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "GET Loyalty/MerchantCards",
                "description": "Get a list of loyalty merchant cards",
                "operationId": "getAll",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of loyalty merchant cards",
                        "schema": {
                            "title": "LoyaltyMerchantcardsList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing loyalty merchant cards",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Loyalty/MerchantCards",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LoyaltyMerchantcardsProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "POST Loyalty/MerchantCards",
                "description": "Add new loyalty merchant card",
                "operationId": "addMerchantCard",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Loyalty merchant card properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created loyalty merchant card",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{loyaltyMerchantCardId}": {
            "get": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "GET Loyalty/MerchantCards/{loyaltyMerchantCardId}",
                "description": "Get loyalty merchant card for a specific id",
                "operationId": "getOne",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Search one by provided id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns loyalty merchant card for a specific id",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsProductModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "PUT Loyalty/MerchantCards/{loyaltyMerchantCardId}",
                "description": "Update loyalty merchant card",
                "operationId": "updateMerchantCard",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Loyalty merchant card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Loyalty merchant card properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated loyalty merchant card",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "DELETE Loyalty/MerchantCards/{loyaltyMerchantCardId}",
                "description": "Delete loyalty merchant card",
                "operationId": "removeMerchantCard",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Loyalty merchant card id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted loyalty merchant card",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{generalMerchantId}/merchantcard/{loyaltyCardId}": {
            "get": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "GET Loyalty/MerchantCards/{generalMerchantId}/merchantcard/{loyaltyCardId}",
                "description": "Get raw merchant card id for merchant id and card id",
                "operationId": "getRawMerchantCardId",
                "parameters": [
                    {
                        "name": "generalMerchantId",
                        "in": "path",
                        "description": "Merchant id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "loyaltyCardId",
                        "in": "path",
                        "description": "Card id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns raw merchant card id for a specific merchant and card ids",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{loyaltyMerchantCardId}/cardgroup/{loyaltyCardGroupId}": {
            "put": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "PUT Loyalty/MerchantCards/{loyaltyMerchantCardId}/cardgroup/{loyaltyCardGroupId}",
                "description": "Update loyalty card group",
                "operationId": "updateCardGroupOfMerchantCard",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Loyalty merchant card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "loyaltyCardGroupId",
                        "in": "path",
                        "description": "Loyalty card group id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated loyalty merchant card",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{loyaltyMerchantCardId}/registerCustomer": {
            "post": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "POST Loyalty/MerchantCards/{loyaltyMerchantCardId}/registerCustomer",
                "description": "Register new customer for a card",
                "operationId": "registerCustomer",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Loyalty merchant card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Loyalty customer properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyCustomersDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Loyalty merchant card",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{loyaltyMerchantCardId}/setCustomer/{loyaltyCustomerId}": {
            "post": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "POST Loyalty/MerchantCards/{loyaltyMerchantCardId}/setCustomer/{loyaltyCustomerId}",
                "description": "Set loyalty customer for a loyalty merchant card",
                "operationId": "setCustomer",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Loyalty merchant card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "loyaltyCustomerId",
                        "in": "path",
                        "description": "Loyalty customer id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated loyalty merchant card",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{loyaltyMerchantCardId}/lock": {
            "get": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "GET Loyalty/MerchantCards/{loyaltyMerchantCardId}/lock",
                "description": "Get loyalty merchant card lock information for a specific id",
                "operationId": "getLock",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Loyalty merchant card id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns lock details for a specific merchant card id",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsDTOLock"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "POST Loyalty/MerchantCards/{loyaltyMerchantCardId}/lock",
                "description": "Lock merchant card",
                "operationId": "lock",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Loyalty merchant card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Information about lock",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsDTOLock"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Loyalty merchant card after lock",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{loyaltyMerchantCardId}/unlock": {
            "post": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "POST Loyalty/MerchantCards/{loyaltyMerchantCardId}/unlock",
                "description": "Unlock merchant card",
                "operationId": "unlock",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Loyalty merchant card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Information about unlock",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsDTOLock"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Loyalty merchant card after unlock",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{loyaltyMerchantCardId}/virtualTerminalData/{loyaltyMerchantId}": {
            "get": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "GET Loyalty/MerchantCards/{loyaltyMerchantCardId}/virtualTerminalData/{loyaltyMerchantId}",
                "description": "Get virtual terminal data for merchant",
                "operationId": "getVirtualTerminalData",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Merchant card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "loyaltyMerchantId",
                        "in": "path",
                        "description": "Merchant id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns virtual terminal data for merchant",
                        "schema": {
                            "$ref": "#/definitions/VirtualTerminalData"
                        }
                    },
                    "201": {
                        "description": "Returns disabled",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{loyaltyMerchantCardId}/transaction": {
            "post": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "POST Loyalty/MerchantCards/{loyaltyMerchantCardId}/transaction",
                "description": "Execute transaction from SDK",
                "operationId": "executeTransaction",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Loyalty merchant card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Transaction properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsDTOTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Loyalty merchant card",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsProductWithReceiptModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{loyaltyMerchantCardId}/checkCsc": {
            "post": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "POST Loyalty/MerchantCards/{loyaltyMerchantCardId}/checkCsc",
                "description": "Check CSC",
                "operationId": "checkCsc",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Loyalty merchant card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Information about card",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsDTOCsc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If CSC is correct returned value is true, false in other case",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{loyaltyMerchantCardId}/validateMerchantcard": {
            "post": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "POST Loyalty/MerchantCards/{loyaltyMerchantCardId}/validateMerchantcard",
                "description": "Function to check the merchant card",
                "operationId": "validateMerchantCard",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Loyalty merchant card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Information about card",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsDTOValidateMerchantCard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns informations about Merchantcard",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsValidateMerchantCard"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{loyaltyMerchantCardId}/newPasscode": {
            "post": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "POST Loyalty/MerchantCards/{loyaltyMerchantCardId}/newPasscode",
                "description": "Function to save new given passcode for given merchantcard identified by cardnumber",
                "operationId": "newPassCode",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Loyalty merchant card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Information about card",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsDTONewPasscode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If new passcode was saved",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{loyaltyMerchantCardId}/resetPasscode": {
            "post": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "POST Loyalty/MerchantCards/{loyaltyMerchantCardId}/resetPasscode",
                "description": "Function to reset a passcode for given merchantcard",
                "operationId": "resetPassCode",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Loyalty merchant card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Information about card",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsDTOResetPasscode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If passcode was reseted",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{loyaltyMerchantCardId}/checkPasscode": {
            "post": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "POST Loyalty/MerchantCards/{loyaltyMerchantCardId}/checkPasscode",
                "description": "Function to check the Passcode card with cardnumber",
                "operationId": "checkPassCode",
                "parameters": [
                    {
                        "name": "loyaltyMerchantCardId",
                        "in": "path",
                        "description": "Loyalty merchant card id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Information about card",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsDTOCheckPasscode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If passcode was reseted",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/MerchantCards/{generalMerchantId}/createMerchantcards/{loyaltyCardgroupId}": {
            "post": {
                "tags": [
                    "loyaltyMerchantcards"
                ],
                "summary": "POST Loyalty/MerchantCards/{generalMerchantId}/createMerchantcards/{loyaltyCardgroupId}",
                "description": "Function to create multiple merchantcards for given merchant with given cardgroup",
                "operationId": "createMerchantcards",
                "parameters": [
                    {
                        "name": "generalMerchantId",
                        "in": "path",
                        "description": "General merchant id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "loyaltyCardgroupId",
                        "in": "path",
                        "description": "Loyalty card group id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Cards amount",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyMerchantcardsDTOCardsAmount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Loyalty merchant card",
                        "schema": {
                            "title": "LoyaltyMerchantcardsList",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LoyaltyMerchantcardsProductModel"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/Sales/{generalMerchantId}/CardGroupsByMerchantID": {
            "get": {
                "tags": [
                    "loyaltySales"
                ],
                "summary": "GET Loyalty/Sales/{generalMerchantId}/CardGroupsByMerchantID",
                "description": "Get cardgroups by merchant id",
                "operationId": "getCardgroupsByMerchantId",
                "parameters": [
                    {
                        "name": "generalMerchantId",
                        "in": "path",
                        "description": "Search by provided id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an array of cardgroups for a specific id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LoyaltyCardgroupsProductModel"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/Sales/{generalStoresId}/VirtualTerminalIdForStore": {
            "get": {
                "tags": [
                    "loyaltySales"
                ],
                "summary": "GET Loyalty/Sales/{generalStoresId}/VirtualTerminalIdForStore",
                "description": "Get DECODED virtual terminal id by DECODED store id",
                "operationId": "getVirtualTerminalIdByStoreId",
                "parameters": [
                    {
                        "name": "generalStoresId",
                        "in": "path",
                        "description": "DECODED store id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a string containing the DECODED id of a virtual terminal",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/StoreGroups": {
            "get": {
                "tags": [
                    "loyaltyStoregroups"
                ],
                "summary": "GET Loyalty/StoreGroups",
                "description": "Get a list of loyalty store groups",
                "operationId": "getAll",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of loyalty store groups",
                        "schema": {
                            "title": "LoyaltyStoregroupsList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing loyalty store groups",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Loyalty/StoreGroups",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LoyaltyStoregroupsProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/StoreGroups/{loyaltyStoreGroupId}": {
            "get": {
                "tags": [
                    "loyaltyStoregroups"
                ],
                "summary": "GET Loyalty/StoreGroups/{loyaltyStoreGroupId}",
                "description": "Get loyalty store group for a specific id",
                "operationId": "getOne",
                "parameters": [
                    {
                        "name": "loyaltyStoreGroupId",
                        "in": "path",
                        "description": "loyalty store group id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns loyalty store group for a specific id",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyStoregroupsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "loyaltyStoregroups"
                ],
                "summary": "PUT Loyalty/StoreGroups/{loyaltyStoreGroupId}",
                "description": "Update loyalty store group",
                "operationId": "updateStoreGroup",
                "parameters": [
                    {
                        "name": "loyaltyStoreGroupId",
                        "in": "path",
                        "description": "Loyalty store group id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Loyalty store group properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyStoregroupsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated loyalty store group",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyStoregroupsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "loyaltyStoregroups"
                ],
                "summary": "DELETE Loyalty/StoreGroups/{loyaltyStoreGroupId}",
                "description": "Remove loyalty store group",
                "operationId": "removeStoreGroup",
                "parameters": [
                    {
                        "name": "loyaltyStoreGroupId",
                        "in": "path",
                        "description": "Loyalty store group id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns deleted loyalty store group for a specific id",
                        "schema": {
                            "description": "DELETE Loyalty/StoreGroups/{loyaltyStoreGroupId}",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LoyaltyStoregroupsProductModel"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Loyalty/Storegroups": {
            "post": {
                "tags": [
                    "loyaltyStoregroups"
                ],
                "summary": "POST Loyalty/Storegroups",
                "description": "Add new loyalty store group",
                "operationId": "addStoreGroup",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Loyalty store group properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoyaltyStoregroupsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created loyalty store group",
                        "schema": {
                            "$ref": "#/definitions/LoyaltyStoregroupsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Containers": {
            "get": {
                "tags": [
                    "paymentContainers"
                ],
                "summary": "GET Payment/Containers",
                "description": "Get a list of payment containers",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of payment containers",
                        "schema": {
                            "title": "PaymentContainersList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing payment containers",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Payment/Containers",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PaymentContainersProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "paymentContainers"
                ],
                "summary": "POST Payment/Containers",
                "description": "Add new containers",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment container properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentContainersDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created payment container",
                        "schema": {
                            "$ref": "#/definitions/PaymentContainersProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Containers/{paymentContainerId}": {
            "get": {
                "tags": [
                    "paymentContainers"
                ],
                "summary": "GET Payment/Containers/{paymentContainerId}",
                "description": "Get all payment containers",
                "operationId": "paymentContainersGetById",
                "parameters": [
                    {
                        "name": "paymentContainerId",
                        "in": "path",
                        "description": "Search one by provided id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns payment container for a specific id",
                        "schema": {
                            "$ref": "#/definitions/PaymentContainersProductModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "paymentContainers"
                ],
                "summary": "PUT Payment/Containers/{paymentContainerId}",
                "description": "Update payment container",
                "operationId": "paymentContainersIdPut",
                "parameters": [
                    {
                        "name": "paymentContainerId",
                        "in": "path",
                        "description": "Payment container id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment container properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentContainersDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated payment container",
                        "schema": {
                            "$ref": "#/definitions/PaymentContainersProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "paymentContainers"
                ],
                "summary": "DELETE Payment/Containers/{paymentContainerId}",
                "description": "Delete payment container",
                "operationId": "paymentContainersIdDelete",
                "parameters": [
                    {
                        "name": "paymentContainerId",
                        "in": "path",
                        "description": "Payment container id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted payment container",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentContainersProductModel"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Containers/{paymentContainerId}/assign/{secondaryPaymentContainerId}": {
            "post": {
                "tags": [
                    "paymentContainers"
                ],
                "summary": "POST Payment/Containers/{paymentContainerId}/assign/{secondaryPaymentContainerId}",
                "description": "Assign an existing payment container to ...",
                "operationId": "paymentContainersIdAssignSecondaryIdPost",
                "parameters": [
                    {
                        "name": "paymentContainerId",
                        "in": "path",
                        "description": "Payment container id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "secondaryPaymentContainerId",
                        "in": "path",
                        "description": "Id to which container will be assigned",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Affected container",
                        "schema": {
                            "$ref": "#/definitions/PaymentContainersProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "paymentContainers"
                ],
                "summary": "DELETE Payment/Containers/{paymentContainerId}/assign/{secondaryPaymentContainerId}",
                "description": "Removes an existing payment container assignment",
                "operationId": "paymentContainersIdAssignSecondaryIdDelete",
                "parameters": [
                    {
                        "name": "paymentContainerId",
                        "in": "path",
                        "description": "Payment container id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "secondaryPaymentContainerId",
                        "in": "path",
                        "description": "Id for which container is currently assigned to",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Affected container",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentContainersProductModel"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Contracts": {
            "get": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "GET Payment/Contracts",
                "description": "Get a list of payment contracts",
                "operationId": "paymentContractsGet",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of payment contracts",
                        "schema": {
                            "title": "PaymentContractsList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing payment contracts",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Payment/Contracts",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PaymentContractsProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "POST Payment/Contracts",
                "description": "Add new contract",
                "operationId": "paymentContractsPost",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment contracts properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentContractsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created payment contract",
                        "schema": {
                            "$ref": "#/definitions/PaymentContractsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Contracts/{paymentContractId}": {
            "get": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "GET Payment/Contracts/{paymentContractId}",
                "description": "Get all payment contracts",
                "operationId": "paymentContractsGetById",
                "parameters": [
                    {
                        "name": "paymentContractId",
                        "in": "path",
                        "description": "Search one by provided id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns payment contract for a specific id",
                        "schema": {
                            "$ref": "#/definitions/PaymentContractsProductModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "PUT Payment/Contracts/{paymentContractId}",
                "description": "Update payment contract",
                "operationId": "paymentContractsIdPut",
                "parameters": [
                    {
                        "name": "paymentContractId",
                        "in": "path",
                        "description": "Payment contract id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment contract properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentContractsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated payment contract",
                        "schema": {
                            "$ref": "#/definitions/PaymentContractsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "DELETE Payment/Contracts/{paymentContractId}",
                "description": "Delete payment contract",
                "operationId": "paymentContractsIdDelete",
                "parameters": [
                    {
                        "name": "paymentContractId",
                        "in": "path",
                        "description": "Payment contract id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted payment contract",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentContractsProductModel"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Contracts/{paymentContractId}/PaymentMethods": {
            "get": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "GET Payment/Contracts/{paymentContractId}/PaymentMethods",
                "description": "Get available payment methods for given contract",
                "operationId": "paymentContractsIdPaymentMethodsGet",
                "parameters": [
                    {
                        "name": "paymentContractId",
                        "in": "path",
                        "description": "Contract identifier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment methods possible for given contract",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Contracts/{paymentContractId}/clone": {
            "post": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "POST Payment/Contracts/{paymentContractId}/clone",
                "description": "Clone an existing payment contract",
                "operationId": "clone",
                "parameters": [
                    {
                        "name": "paymentContractId",
                        "in": "path",
                        "description": "Contract identifier",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment contract clone properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentContractsDTOClone"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated payment contract",
                        "schema": {
                            "$ref": "#/definitions/PaymentContractsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Contracts/{paymentContractId}/requestId": {
            "post": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "POST Payment/Contracts/{paymentContractId}/requestId",
                "description": "This method clones your payment contract, so that you can use this to separate the merchants of your marketplace. (Needs to be activated))",
                "operationId": "requestId",
                "parameters": [
                    {
                        "name": "paymentContractId",
                        "in": "path",
                        "description": "Contract identifier of the parent",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment contract request id properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentContractsDTORequestId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Proper response after cloning your payment contract",
                        "schema": {
                            "title": "PaymentContractsRequestIdResult",
                            "properties": {
                                "contract": {
                                    "description": "The payment contract object",
                                    "$ref": "#/definitions/PaymentContractsProductModel"
                                },
                                "apikey": {
                                    "description": "Returns the apikey of the created merchant",
                                    "type": "string"
                                },
                                "payin_account": {
                                    "description": "The bank account you can use for pay in.",
                                    "type": "object",
                                    "$ref": "#/definitions/PaymentInformation"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Customers": {
            "get": {
                "tags": [
                    "paymentCustomers"
                ],
                "summary": "GET Payment/Customers",
                "description": "Get a list of payment customers",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of payment customers",
                        "schema": {
                            "title": "PaymentCustomersList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing payment customers",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Payment/Customers",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PaymentCustomersProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "paymentCustomers"
                ],
                "summary": "POST Payment/Customers",
                "description": "Add new customer",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment customer properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentCustomersDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created payment customer",
                        "schema": {
                            "$ref": "#/definitions/PaymentCustomersProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Customers/{paymentCustomerId}": {
            "get": {
                "tags": [
                    "paymentCustomers"
                ],
                "summary": "GET Payment/Customers/{paymentCustomerId}",
                "description": "Get all payment customers",
                "operationId": "paymentCustomersGetById",
                "parameters": [
                    {
                        "name": "paymentCustomerId",
                        "in": "path",
                        "description": "Payment customer id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns payment customer for a specific id",
                        "schema": {
                            "$ref": "#/definitions/PaymentCustomersProductModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "paymentCustomers"
                ],
                "summary": "PUT Payment/Customers/{paymentCustomerId}",
                "description": "Update payment customer",
                "operationId": "paymentCustomersIdPut",
                "parameters": [
                    {
                        "name": "paymentCustomerId",
                        "in": "path",
                        "description": "Payment customer id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment customer properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentCustomersDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated payment customer",
                        "schema": {
                            "$ref": "#/definitions/PaymentCustomersProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "paymentCustomers"
                ],
                "summary": "DELETE Payment/Customers/{paymentCustomerId}",
                "description": "Delete payment customer",
                "operationId": "paymentCustomersIdDelete",
                "parameters": [
                    {
                        "name": "paymentCustomerId",
                        "in": "path",
                        "description": "Payment customer id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted payment customer",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentCustomersProductModel"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/{paymentMethod}/{paymentId}/assignExternalInvoicePdf/{documentId}": {
            "post": {
                "tags": [
                    "paymentSecupayCreditcards",
                    "paymentSecupayDebits",
                    "paymentSecupayInvoices",
                    "paymentSecupayPrepays"
                ],
                "summary": "POST Payment/{paymentMethod}/{paymentId}/assignExternalInvoicePdf/{documentId}",
                "description": "Assign external invoice pdf",
                "operationId": "assignExternalInvoicePdf",
                "parameters": [
                    {
                        "name": "paymentMethod",
                        "in": "path",
                        "description": "Payment method (secupaydebits, secupayprepays, secupayinvoices, ...)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "Payment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "Document id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Request body for assigning external invoice pdf",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionDTOExternalInvoicePdf"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document details",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionExternalInvoicePdf"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/{paymentMethod}/{paymentId}/cancel": {
            "post": {
                "tags": [
                    "paymentSecupayCreditcards",
                    "paymentSecupayDebits",
                    "paymentSecupayInvoices",
                    "paymentSecupayPrepays"
                ],
                "summary": "POST Payment/{paymentMethod}/{paymentId}/cancel",
                "description": "Function to cancel the payment transaction",
                "operationId": "cancelPaymentTransactionById",
                "parameters": [
                    {
                        "name": "paymentMethod",
                        "in": "path",
                        "description": "Payment method (secupaydebits, secupayprepays, secupayinvoices, ...)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "Payment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Cancel payment transaction input properties",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/SecupayTransactionCancelDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled successfully",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/{paymentMethod}/{paymentId}/capture": {
            "post": {
                "tags": [
                    "paymentSecupayCreditcards",
                    "paymentSecupayDebits",
                    "paymentSecupayInvoices",
                    "paymentSecupayPrepays"
                ],
                "summary": "POST Payment/{paymentMethod}/{paymentId}/capture",
                "description": "Function to cancel the payment transaction",
                "operationId": "capturePaymentTransactionById",
                "parameters": [
                    {
                        "name": "paymentMethod",
                        "in": "path",
                        "description": "Payment method (secupaydebits, secupayprepays, secupayinvoices, ...)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "Payment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Capture payment transaction input properties",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/SecupayTransactionCaptureDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/{paymentMethod}/{paymentId}/basket": {
            "put": {
                "tags": [
                    "paymentSecupayCreditcards",
                    "paymentSecupayDebits",
                    "paymentSecupayInvoices",
                    "paymentSecupayPrepays"
                ],
                "summary": "PUT Payment/{paymentMethod}/{paymentId}/basket",
                "description": "Update a basket of an existing payment transaction",
                "operationId": "updateBasketByPaymentId",
                "parameters": [
                    {
                        "name": "paymentMethod",
                        "in": "path",
                        "description": "Payment method (secupaydebits, secupayprepays, secupayinvoices, ...)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "Payment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Update basket input properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionUpdateBasketDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/{paymentMethod}/{paymentId}/accrual": {
            "put": {
                "tags": [
                    "paymentSecupayCreditcards",
                    "paymentSecupayDebits",
                    "paymentSecupayInvoices",
                    "paymentSecupayPrepays"
                ],
                "summary": "PUT Payment/{paymentMethod}/{paymentId}/accrual",
                "description": "Update the accrual flag of an existing payment transaction",
                "operationId": "reverseAccrualByPaymentId",
                "parameters": [
                    {
                        "name": "paymentMethod",
                        "in": "path",
                        "description": "Payment method (secupaydebits, secupayprepays, secupayinvoices, ...)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "Payment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Reverse accrual input properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionReverseAccrualDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/{paymentMethod}/{paymentId}/shippingInformation": {
            "put": {
                "tags": [
                    "paymentSecupayCreditcards",
                    "paymentSecupayDebits",
                    "paymentSecupayInvoices",
                    "paymentSecupayPrepays"
                ],
                "summary": "PUT Payment/{paymentMethod}/{paymentId}/shippingInformation",
                "description": "Update the accrual flag of an existing payment transaction",
                "operationId": "setShippingInformationByPaymentId",
                "parameters": [
                    {
                        "name": "paymentMethod",
                        "in": "path",
                        "description": "Payment method (secupaydebits, secupayprepays, secupayinvoices, ...)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "Payment id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Shipping information properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionSetShippingInformationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Secupaycreditcards/{paymentCreditCardsId}": {
            "get": {
                "tags": [
                    "paymentSecupayCreditcards"
                ],
                "summary": "GET Payment/Secupaycreditcards/{paymentCreditCardsId}",
                "description": "Get the details of a payment transaction",
                "operationId": "paymentSecupayCreditcardsGetById",
                "parameters": [
                    {
                        "name": "paymentCreditCardsId",
                        "in": "path",
                        "description": "Payment credit cards id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Secupaycreditcards": {
            "post": {
                "tags": [
                    "paymentSecupayCreditcards"
                ],
                "summary": "POST Payment/Secupaycreditcards",
                "description": "Start a credit card payment transaction",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Credit card payment transaction input properties",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/SecupayTransactionProductDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    }
                }
            }
        },
        "/Payment/Secupaycreditcards/{paymentCreditCardsId}/cancel": {
            "post": {
                "tags": [
                    "paymentSecupayCreditcards"
                ],
                "summary": "POST Payment/Secupaycreditcards/{paymentCreditCardsId}/cancel",
                "description": "DEPRECATED: use cancelPaymentTransactionById",
                "operationId": "paymentSecupayCreditcardsCancelById",
                "parameters": [
                    {
                        "name": "paymentCreditCardsId",
                        "in": "path",
                        "description": "Payment credit cards id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled successfully",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Secupaydebits/{paymentDebitId}": {
            "get": {
                "tags": [
                    "paymentSecupayDebits"
                ],
                "summary": "GET Payment/Secupaydebits/{paymentDebitId}",
                "description": "Get the details of a payment transaction",
                "operationId": "paymentSecupayDebitsGetById",
                "parameters": [
                    {
                        "name": "paymentDebitId",
                        "in": "path",
                        "description": "Payment debit id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Secupaydebits": {
            "post": {
                "tags": [
                    "paymentSecupayDebits"
                ],
                "summary": "POST Payment/Secupaydebits",
                "description": "Start a debit payment transaction",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Debit payment transaction input properties",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/SecupayTransactionProductDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Started debit payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Secupaydebits/{paymentDebitId}/cancel": {
            "post": {
                "tags": [
                    "paymentSecupayDebits"
                ],
                "summary": "POST Payment/Secupaydebits/{paymentDebitId}/cancel",
                "description": "DEPRECATED: use cancelPaymentTransactionById",
                "operationId": "paymentSecupayDebitsCancelById",
                "parameters": [
                    {
                        "name": "paymentDebitId",
                        "in": "path",
                        "description": "Payment debit id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled successfully",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Secupayinvoices/{paymentInvoiceId}": {
            "get": {
                "tags": [
                    "paymentSecupayInvoices"
                ],
                "summary": "GET Payment/Secupayinvoices/{paymentInvoiceId}",
                "description": "Get the details of a payment transaction",
                "operationId": "paymentSecupayInvoicesGetById",
                "parameters": [
                    {
                        "name": "paymentInvoiceId",
                        "in": "path",
                        "description": "Payment transaction ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Secupayinvoices": {
            "post": {
                "tags": [
                    "paymentSecupayInvoices"
                ],
                "summary": "POST Payment/Secupayinvoices",
                "description": "Start a invoice payment transaction",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Invoice payment transaction input properties",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/SecupayTransactionProductDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Started invoice payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Secupayinvoices/{paymentInvoiceId}/cancel": {
            "post": {
                "tags": [
                    "paymentSecupayInvoices"
                ],
                "summary": "POST Payment/Secupayinvoices/{paymentInvoiceId}/cancel",
                "description": "DEPRECATED: use cancelPaymentTransactionById",
                "operationId": "paymentSecupayInvoicesCancelById",
                "parameters": [
                    {
                        "name": "paymentInvoiceId",
                        "in": "path",
                        "description": "Payment invoice id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled successfully",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Secupaypayout/{paymentPayoutId}": {
            "get": {
                "tags": [
                    "paymentSecupayPayout"
                ],
                "summary": "GET Payment/Secupaypayout/{paymentPayoutId}",
                "description": "Get the details of a payment transaction",
                "operationId": "getSecupaypayout",
                "parameters": [
                    {
                        "name": "paymentPayoutId",
                        "in": "path",
                        "description": "Payment payout id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayPayoutProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Secupaypayout": {
            "post": {
                "tags": [
                    "paymentSecupayPayout"
                ],
                "summary": "POST Payment/Secupaypayout",
                "description": "Start a payout transaction",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payout payment transaction input properties",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/SecupayPayoutDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Started prepay payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayPayoutProductModel"
                        }
                    }
                }
            }
        },
        "/Payment/Secupayprepays/{paymentPrepayId}": {
            "get": {
                "tags": [
                    "paymentSecupayPrepays"
                ],
                "summary": "GET Payment/Secupayprepays/{paymentPrepayId}",
                "description": "Get the details of a payment transaction",
                "operationId": "paymentSecupayPrepaysGetById",
                "parameters": [
                    {
                        "name": "paymentPrepayId",
                        "in": "path",
                        "description": "Payment prepay id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Secupayprepays": {
            "post": {
                "tags": [
                    "paymentSecupayPrepays"
                ],
                "summary": "POST Payment/Secupayprepays",
                "description": "Start a prepay payment transaction",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Prepay payment transaction input properties",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/SecupayTransactionProductDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Started prepay payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    }
                }
            }
        },
        "/Payment/Secupayprepays/{paymentPrepayId}/cancel": {
            "post": {
                "tags": [
                    "paymentSecupayPrepays"
                ],
                "summary": "POST Payment/Secupayprepays/{paymentPrepayId}/cancel",
                "description": "DEPRECATED: use cancelPaymentTransactionById",
                "operationId": "paymentSecupayPrepaysCancelById",
                "parameters": [
                    {
                        "name": "paymentPrepayId",
                        "in": "path",
                        "description": "Payment prepay id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled successfully",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Canceled transaction",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Transactions": {
            "get": {
                "tags": [
                    "paymentTransactions"
                ],
                "summary": "GET Payment/Transactions",
                "description": "Get a list of payment transactions",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of payment transactions",
                        "schema": {
                            "title": "PaymentTransactionsList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing payment transactions",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Payment/Transactions",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PaymentTransactionsProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/Payment/Transactions/{paymentTransactionId}": {
            "get": {
                "tags": [
                    "paymentTransactions"
                ],
                "summary": "GET Payment/Transactions/{paymentTransactionId}",
                "description": "Get all payment transactions",
                "operationId": "paymentTransactionsGetById",
                "parameters": [
                    {
                        "name": "paymentTransactionId",
                        "in": "path",
                        "description": "Payment transaction id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list with all payment transactions",
                        "schema": {
                            "$ref": "#/definitions/PaymentTransactionsProductModel"
                        }
                    }
                }
            }
        },
        "/Payment/Transactions/{paymentTransactionId}/cancel": {
            "post": {
                "tags": [
                    "paymentTransactions"
                ],
                "summary": "POST Payment/Transactions/{paymentTransactionId}/cancel",
                "description": "Cancel a payment transaction",
                "operationId": "paymentTransactionsIdCancelPost",
                "parameters": [
                    {
                        "name": "paymentTransactionId",
                        "in": "path",
                        "description": "Payment transaction id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled payment transactions",
                        "schema": {
                            "description": "list of canceled payment transactions",
                            "type": "array",
                            "items": {
                                "title": "PaymentTransactionsCancelList",
                                "properties": {
                                    "count": {
                                        "description": "Count of returned payment contracts",
                                        "type": "integer"
                                    },
                                    "data": {
                                        "description": "POST Payment/Transactions/{paymentTransactionId}/cancel",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/definitions/PaymentTransactionsProductModel"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Transactions/{paymentTransactionId}/ShippingUrl": {
            "get": {
                "tags": [
                    "paymentTransactions"
                ],
                "summary": "GET Payment/Transactions/{paymentTransactionId}/ShippingUrl",
                "description": "Get the url where you can fill the shipping information",
                "operationId": "paymentTransactionsIdShippingUrlGet",
                "parameters": [
                    {
                        "name": "paymentTransactionId",
                        "in": "path",
                        "description": "Payment transaction id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The url of the shipping information form",
                        "schema": {
                            "title": "PaymentTransactionsShippingUrl",
                            "properties": {
                                "url": {
                                    "description": "The url of the shipping information form",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Payment/Transactions/{paymentTransactionId}/getPaymentInstructions/{smartTransactionId}": {
            "get": {
                "tags": [
                    "paymentTransactions"
                ],
                "summary": "GET Payment/Transactions/{paymentTransactionId}/getPaymentInstructions/{smartTransactionId}",
                "description": "Get the payment instructions for an invoice transaction",
                "operationId": "getPaymentInstructions",
                "parameters": [
                    {
                        "name": "paymentTransactionId",
                        "in": "path",
                        "description": "Payment transaction id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "smartTransactionId",
                        "in": "path",
                        "description": "Smart transaction id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The instructions for an invoice transaction",
                        "schema": {
                            "$ref": "#/definitions/PaymentTransactionsInstructions"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Prepaid/Contracts/me/mappingZvt": {
            "post": {
                "tags": [
                    "prepaidContractsProduct"
                ],
                "summary": "POST Prepaid/Contracts/null/mappingZvt",
                "description": "Gets prepaid item id from product id which is configured in prepaid contracts",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Prepaid transaction input properties",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PrepaidZvtDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created new prepaid transaction",
                        "schema": {
                            "$ref": "#/definitions/PrepaidMappingZvt"
                        }
                    }
                }
            }
        },
        "/Prepaid/Items": {
            "get": {
                "tags": [
                    "prepaidItems"
                ],
                "summary": "GET Prepaid/Items",
                "description": "Get a list of prepaid items",
                "operationId": "getAll",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of prepaid items",
                        "schema": {
                            "title": "PrepaidItemsList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing prepaid items",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Prepaid/Items",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PrepaidItemsProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/Prepaid/Items/{prepaidItemId}": {
            "get": {
                "tags": [
                    "prepaidItems"
                ],
                "summary": "GET Prepaid/Items/{prepaidItemId}",
                "description": "Get one prepaid item for a specific id",
                "operationId": "getOne",
                "parameters": [
                    {
                        "name": "prepaidItemId",
                        "in": "path",
                        "description": "Prepaid item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns prepaid item for a specific id",
                        "schema": {
                            "$ref": "#/definitions/PrepaidItemsProductModel"
                        }
                    }
                }
            }
        },
        "/Prepaid/Sales": {
            "post": {
                "tags": [
                    "prepaidSalesProduct"
                ],
                "summary": "POST Prepaid/Sales",
                "description": "Create new prepaid transaction",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Prepaid transaction input properties",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PrepaidSalesProductDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created new prepaid transaction",
                        "schema": {
                            "$ref": "#/definitions/PrepaidSalesProductModel"
                        }
                    }
                }
            }
        },
        "/Smart/Devices": {
            "get": {
                "tags": [
                    "smartDevices"
                ],
                "summary": "GET Smart/Devices",
                "description": "Get a list of smart devices",
                "operationId": "getAll",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of smart devices",
                        "schema": {
                            "title": "SmartDevicesList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing smart devices",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Smart/Devices",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmartDevicesProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "smartDevices"
                ],
                "summary": "POST Smart/Devices",
                "description": "Create new smart device",
                "operationId": "addDevice",
                "parameters": [
                    {
                        "name": "smartDeviceProperties",
                        "in": "body",
                        "description": "Smart device properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmartDevicesDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created smart device",
                        "schema": {
                            "$ref": "#/definitions/SmartDevicesProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Smart/Devices/{smartDeviceId}": {
            "get": {
                "tags": [
                    "smartDevices"
                ],
                "summary": "GET Smart/Devices/{smartDeviceId}",
                "description": "Get one smart device for a specific id",
                "operationId": "getOne",
                "parameters": [
                    {
                        "name": "smartDeviceId",
                        "in": "path",
                        "description": "Smart device id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns smart device for a specific id",
                        "schema": {
                            "$ref": "#/definitions/SmartDevicesProductModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "smartDevices"
                ],
                "summary": "PUT Smart/Devices/{smartDeviceId}",
                "description": "Update smart device",
                "operationId": "updateDevice",
                "parameters": [
                    {
                        "name": "smartDeviceId",
                        "in": "path",
                        "description": "Smart device id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "smartDeviceProperties",
                        "in": "body",
                        "description": "Smart device properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmartDevicesDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated smart device",
                        "schema": {
                            "$ref": "#/definitions/SmartDevicesProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Smart/Devices/{smartDeviceId}/routing/type/{type}": {
            "get": {
                "tags": [
                    "smartDevices"
                ],
                "summary": "GET Smart/Devices/{smartDeviceId}/routing/type/{type}",
                "description": "Get single routing",
                "operationId": "getRouting",
                "parameters": [
                    {
                        "name": "smartDeviceId",
                        "in": "path",
                        "description": "Smart device id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Payment type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of smart devices",
                        "schema": {
                            "title": "SmartDevicesList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing smart devices",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Smart/Devices/{smartDeviceId}/routing/type/{type}",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmartDevicesProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/Smart/Devices/{smartDeviceId}/CreateVirtualDevice": {
            "post": {
                "tags": [
                    "smartDevices"
                ],
                "summary": "POST Smart/Devices/{smartDeviceId}/CreateVirtualDevice",
                "description": "Create virtual device",
                "operationId": "createVirtualDevice",
                "parameters": [
                    {
                        "name": "smartDeviceId",
                        "in": "path",
                        "description": "Smart device id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Smart device",
                        "schema": {
                            "$ref": "#/definitions/SmartDevicesProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Smart/Devices/{smartDeviceId}/CreatePrepaidTid": {
            "post": {
                "tags": [
                    "smartDevices"
                ],
                "summary": "POST Smart/Devices/{smartDeviceId}/CreatePrepaidTid",
                "description": "Create prepaid tid",
                "operationId": "createPrepaidTid",
                "parameters": [
                    {
                        "name": "smartDeviceId",
                        "in": "path",
                        "description": "Smart device id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "prepaidTidProperties",
                        "in": "body",
                        "description": "Prepaid tid properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmartDevicesDTOPrepaidTid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Smart device",
                        "schema": {
                            "$ref": "#/definitions/SmartDevicesProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Smart/Devices/{smartDeviceId}/GetSecubaseConfig": {
            "post": {
                "tags": [
                    "smartDevices"
                ],
                "summary": "POST Smart/Devices/{smartDeviceId}/GetSecubaseConfig",
                "description": "Get secubase config",
                "operationId": "getSecubaseConfig",
                "parameters": [
                    {
                        "name": "smartDeviceId",
                        "in": "path",
                        "description": "Smart device id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "secubaseConfigProperties",
                        "in": "body",
                        "description": "Secubase config properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmartDevicesDTOSecubaseConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Smart device",
                        "schema": {
                            "$ref": "#/definitions/SmartDevicesSecubaseConfig"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Smart/Transactions": {
            "get": {
                "tags": [
                    "smartTransactions"
                ],
                "summary": "GET Smart/Transactions",
                "description": "Get a list of smart transactions",
                "operationId": "getAll",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of smart transactions",
                        "schema": {
                            "title": "SmartTransactionsList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing smart transactions",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Smart/Transactions",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmartTransactionsProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "smartTransactions"
                ],
                "summary": "POST Smart/Transactions",
                "description": "Create new smart transaction",
                "operationId": "addTransaction",
                "parameters": [
                    {
                        "name": "smartTransactionProperties",
                        "in": "body",
                        "description": "Smart transaction properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmartTransactionsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created smart transaction",
                        "schema": {
                            "$ref": "#/definitions/SmartTransactionsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Smart/Transactions/{smartTransactionId}": {
            "get": {
                "tags": [
                    "smartTransactions"
                ],
                "summary": "GET Smart/Transactions/{smartTransactionId}",
                "description": "Get one smart transaction for a specific id",
                "operationId": "getOne",
                "parameters": [
                    {
                        "name": "smartTransactionId",
                        "in": "path",
                        "description": "Smart transaction id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns smart transaction for a specific id",
                        "schema": {
                            "$ref": "#/definitions/SmartTransactionsProductModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "smartTransactions"
                ],
                "summary": "PUT Smart/Transactions/{smartTransactionId}",
                "description": "Update smart transaction",
                "operationId": "updateTransaction",
                "parameters": [
                    {
                        "name": "smartTransactionId",
                        "in": "path",
                        "description": "Smart transaction id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "smartTransactionProperties",
                        "in": "body",
                        "description": "Smart transaction properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmartTransactionsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated smart transaction",
                        "schema": {
                            "$ref": "#/definitions/SmartTransactionsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Smart/Transactions/{smartTransactionId}/cancel": {
            "post": {
                "tags": [
                    "smartTransactions"
                ],
                "summary": "POST Smart/Transactions/{smartTransactionId}/cancel",
                "description": "Method to cancel the transaction with given idn",
                "operationId": "cancelTransaction",
                "parameters": [
                    {
                        "name": "smartTransactionId",
                        "in": "path",
                        "description": "Smart transaction id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created smart transaction",
                        "schema": {
                            "$ref": "#/definitions/SmartTransactionsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Smart/Transactions/{smartTransactionId}/start/{paymentMethod}": {
            "post": {
                "tags": [
                    "smartTransactions"
                ],
                "summary": "POST Smart/Transactions/{smartTransactionId}/start/{paymentMethod}",
                "description": "Start smart transaction with given payment method",
                "operationId": "startTransaction",
                "parameters": [
                    {
                        "name": "smartTransactionId",
                        "in": "path",
                        "description": "Smart transaction id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "paymentMethod",
                        "in": "path",
                        "description": "Payment method",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Smart transaction",
                        "schema": {
                            "$ref": "#/definitions/SmartTransactionsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Smart/Transactions/{smartTransactionId}/canceltrx": {
            "post": {
                "tags": [
                    "smartTransactions"
                ],
                "summary": "POST Smart/Transactions/{smartTransactionId}/canceltrx",
                "description": "Starts Cancel 'Cash' transaction on Terminal with 'receipt_number' ('Beleg-Nr.')",
                "operationId": "cancelTrx",
                "parameters": [
                    {
                        "name": "smartTransactionId",
                        "in": "path",
                        "description": "Smart transaction id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created smart transaction",
                        "schema": {
                            "$ref": "#/definitions/SmartTransactionsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Smart/Transactions/{smartDeviceId}/diagnosis": {
            "post": {
                "tags": [
                    "smartTransactions"
                ],
                "summary": "POST Smart/Transactions/{smartDeviceId}/diagnosis",
                "description": "Starts extended Diagnose on Terminal, this method is normally called by SDK's from cash register",
                "operationId": "diagnose",
                "parameters": [
                    {
                        "name": "smartDeviceId",
                        "in": "path",
                        "description": "Smart device id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Smart transaction",
                        "schema": {
                            "$ref": "#/definitions/SmartTransactionsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Smart/Transactions/{smartDeviceId}/endOfDay": {
            "post": {
                "tags": [
                    "smartTransactions"
                ],
                "summary": "POST Smart/Transactions/{smartDeviceId}/endOfDay",
                "description": "Starts End of Day Report on Terminal, this method is normally called by SDK's from cash register",
                "operationId": "startEndOfDayReport",
                "parameters": [
                    {
                        "name": "smartDeviceId",
                        "in": "path",
                        "description": "Smart device id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Smart transaction",
                        "schema": {
                            "$ref": "#/definitions/SmartTransactionsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Smart/Transactions/{smartTransactionId}/PreTransaction": {
            "post": {
                "tags": [
                    "smartTransactions"
                ],
                "summary": "POST Smart/Transactions/{smartTransactionId}/PreTransaction",
                "description": "Function that checks balance of merchantcard from ident and if possible creates bonus product items for basket",
                "operationId": "preTransaction",
                "parameters": [
                    {
                        "name": "smartTransactionId",
                        "in": "path",
                        "description": "Smart transaction id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about missing sum and bonus products",
                        "schema": {
                            "$ref": "#/definitions/SmartTransactionsPreTransactionModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "/Smart/Transactions/{smartTransactionId}/prepare": {
            "post": {
                "tags": [
                    "smartTransactions"
                ],
                "summary": "POST Smart/Transactions/stx_xxx/prepare",
                "description": "Create and score payment transaction assigned to given smart transaction",
                "operationId": "prepare",
                "parameters": [
                    {
                        "name": "smartTransactionId",
                        "in": "path",
                        "description": "Smart transaction id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Information which customer and container will be used to this operation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmartTransactionsPrepare"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Smart transaction",
                        "schema": {
                            "$ref": "#/definitions/SmartTransactionsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ProductInstanceUID": {
            "description": "Product name and instance id, uniquely identifying instance of Product",
            "properties": {
                "object": {
                    "description": "Object type of instance",
                    "type": "string"
                },
                "id": {
                    "description": "ID of instance",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProductInstanceID": {
            "description": "Product instance id, uniquely identifying instance of Product",
            "properties": {
                "id": {
                    "description": "ID of instance",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Address": {
            "description": "Address",
            "properties": {
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "street": {
                    "description": "Street",
                    "type": "string"
                },
                "street_number": {
                    "description": "Street number",
                    "type": "string"
                },
                "city": {
                    "description": "City",
                    "type": "string"
                },
                "postal_code": {
                    "description": "Postal code",
                    "type": "string"
                },
                "country": {
                    "description": "Country",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PaymentInformation": {
            "description": "Payment information",
            "properties": {
                "iban": {
                    "description": "IBAN",
                    "type": "string"
                },
                "bic": {
                    "description": "BIC",
                    "type": "string"
                },
                "owner": {
                    "description": "Owner",
                    "type": "string"
                },
                "bankname": {
                    "description": "Bank name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BankAccountDescriptor": {
            "description": "Bank account data like owner, iban, bic and bank name",
            "properties": {
                "iban": {
                    "description": "IBAN",
                    "type": "string"
                },
                "bic": {
                    "description": "BIC",
                    "type": "string"
                },
                "owner": {
                    "description": "Owner",
                    "type": "string"
                },
                "bankname": {
                    "description": "Bank name",
                    "type": "string"
                },
                "purpose": {
                    "description": "Purpose",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProductExceptionPayload": {
            "description": "Payload of exceptions returned by API",
            "properties": {
                "status": {
                    "description": "Request status (always equals to 'error')",
                    "type": "string"
                },
                "error": {
                    "description": "Error type identifier",
                    "type": "string"
                },
                "error_details": {
                    "description": "Error details",
                    "type": "string"
                },
                "error_user": {
                    "description": "Error details in German",
                    "type": "string"
                },
                "code": {
                    "description": "HTTP code corresponding to error",
                    "type": "string"
                },
                "supportId": {
                    "description": "ID by which support team can relate error with action(s) that caused it",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Contact": {
            "properties": {
                "forename": {
                    "description": "Forename",
                    "type": "string"
                },
                "surname": {
                    "description": "Surname",
                    "type": "string"
                },
                "companyname": {
                    "description": "Company name",
                    "type": "string"
                },
                "salutation": {
                    "description": "Salutation",
                    "type": "string"
                },
                "gender": {
                    "description": "Gender",
                    "type": "string"
                },
                "title": {
                    "description": "Title",
                    "type": "string"
                },
                "email": {
                    "description": "Email",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone",
                    "type": "string"
                },
                "mobile": {
                    "description": "Mobile",
                    "type": "string"
                },
                "fax": {
                    "description": "Fax",
                    "type": "string"
                },
                "dob": {
                    "description": "Date of birth",
                    "type": "string"
                },
                "picture": {
                    "description": "The document id of an user picture (To upload the picture use our document service.)",
                    "type": "string"
                },
                "url_website": {
                    "description": "URL to website",
                    "type": "string"
                },
                "birthplace": {
                    "description": "Birthplace",
                    "type": "string"
                },
                "nationality": {
                    "description": "Nationality",
                    "type": "string"
                },
                "address": {
                    "description": "Address",
                    "type": "object",
                    "$ref": "#/definitions/Address"
                }
            },
            "type": "object"
        },
        "GeoAddress": {
            "properties": {
                "type": {
                    "description": "Address type",
                    "type": "string"
                },
                "address_components": {
                    "description": "Address components",
                    "type": "object",
                    "$ref": "#/definitions/AddressComponents"
                },
                "address_formatted": {
                    "description": "Address formatted",
                    "type": "string"
                },
                "geometry": {
                    "description": "Geometry",
                    "properties": {
                        "lat": {
                            "description": "latitude",
                            "type": "string"
                        },
                        "lon": {
                            "description": "longitude",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AddressComponents": {
            "properties": {
                "long_name": {
                    "description": "Long name",
                    "type": "string"
                },
                "short_name": {
                    "description": "Short name",
                    "type": "string"
                },
                "types": {
                    "description": "Types",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "ParentModel": {
            "properties": {
                "object": {
                    "description": "Object of parent",
                    "type": "string"
                },
                "id": {
                    "description": "Id of parent",
                    "type": "string"
                },
                "type": {
                    "description": "Type of parent",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AssignedBy": {
            "properties": {
                "object": {
                    "description": "Object of assigned by",
                    "type": "string"
                },
                "id": {
                    "description": "Id of assigned by",
                    "type": "string"
                },
                "owner": {
                    "description": "Owner",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "InvitedBy": {
            "properties": {
                "object": {
                    "description": "Object of invited by",
                    "type": "string"
                },
                "id": {
                    "description": "Id of invited by",
                    "type": "string"
                },
                "invited": {
                    "description": "Invited",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Store": {
            "properties": {
                "object": {
                    "description": "Object of store",
                    "type": "string"
                },
                "id": {
                    "description": "Id of store",
                    "type": "string",
                    "format": "id"
                },
                "name": {
                    "description": "Store name",
                    "type": "string"
                },
                "name_raw": {
                    "description": "Store name raw",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OpenHours": {
            "description": "Open hours",
            "properties": {
                "open": {
                    "description": "Open",
                    "type": "object",
                    "$ref": "#/definitions/DayTime"
                },
                "close": {
                    "description": "Close",
                    "type": "object",
                    "$ref": "#/definitions/DayTime"
                }
            },
            "type": "object"
        },
        "DayTime": {
            "description": "Day and time",
            "properties": {
                "day": {
                    "description": "Day",
                    "type": "integer"
                },
                "time": {
                    "description": "Time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ItemGroup": {
            "properties": {
                "object": {
                    "description": "Object of item group",
                    "type": "string"
                },
                "id": {
                    "description": "Id of item group",
                    "type": "string",
                    "format": "id"
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "logo": {
                    "description": "Logo",
                    "type": "string"
                },
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DocumentUploadsDTOContent": {
            "properties": {
                "content": {
                    "description": "Content",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DocumentUploadsBaseProductModel": {
            "properties": {
                "object": {
                    "description": "Object of document upload",
                    "type": "string"
                },
                "id": {
                    "description": "Id of document upload",
                    "type": "string",
                    "format": "id"
                },
                "created": {
                    "description": "Created at date",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DocumentUploadsProductModel": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DocumentUploadsBaseProductModel"
                },
                {
                    "properties": {
                        "type": {
                            "description": "Type",
                            "type": "string"
                        },
                        "name": {
                            "description": "Name",
                            "type": "string"
                        },
                        "size": {
                            "description": "Size",
                            "type": "integer"
                        }
                    }
                }
            ]
        },
        "GeneralMerchantsProductModel": {
            "properties": {
                "object": {
                    "description": "Object of general merchant",
                    "type": "string"
                },
                "id": {
                    "description": "Id of general merchant",
                    "type": "string",
                    "format": "id"
                },
                "id_old": {
                    "description": "Old id of general merchant",
                    "type": "string",
                    "format": "id"
                },
                "type": {
                    "description": "Type of general merchant",
                    "type": "string"
                },
                "user": {
                    "description": "General merchant user",
                    "type": "object",
                    "$ref": "#/definitions/GeneralMerchantsUser"
                },
                "parent": {
                    "description": "Parent of general merchant user",
                    "type": "object",
                    "$ref": "#/definitions/ParentModel"
                },
                "assigned_by": {
                    "description": "Assigned by",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssignedBy"
                    }
                },
                "invited_by": {
                    "description": "Invited by",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InvitedBy"
                    }
                },
                "legal_details": {
                    "description": "Legal details",
                    "type": "object",
                    "$ref": "#/definitions/GeneralMerchantsLegalDetails"
                },
                "checkout_options": {
                    "description": "Checkout options",
                    "type": "object",
                    "$ref": "#/definitions/GeneralMerchantsCheckoutOptions"
                },
                "urls": {
                    "description": "Urls",
                    "type": "object",
                    "$ref": "#/definitions/GeneralMerchantsUrls"
                }
            },
            "type": "object"
        },
        "GeneralMerchantsUser": {
            "properties": {
                "object": {
                    "description": "Object of general merchant user",
                    "type": "string"
                },
                "id": {
                    "description": "Id of general merchant user",
                    "type": "string"
                },
                "name": {
                    "description": "Name of general merchant user",
                    "type": "string"
                },
                "companyname": {
                    "description": "Company name of general merchant user",
                    "type": "string"
                },
                "address": {
                    "description": "Address of general merchant user",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GeoAddress"
                    }
                }
            },
            "type": "object"
        },
        "GeneralMerchantsLegalDetails": {
            "properties": {
                "url": {
                    "description": "Url",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "content_type": {
                    "description": "Content type",
                    "type": "string"
                },
                "language": {
                    "description": "Language",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GeneralMerchantsCheckoutOptions": {
            "properties": {
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                },
                "shipping": {
                    "description": "Shipping",
                    "type": "object",
                    "$ref": "#/definitions/GeneralMerchantsCheckoutOptionsShipping"
                },
                "collection": {
                    "description": "Collection",
                    "type": "object",
                    "$ref": "#/definitions/GeneralMerchantsCheckoutOptionsCollection"
                }
            },
            "type": "object"
        },
        "GeneralMerchantsCheckoutOptionsShipping": {
            "properties": {
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GeneralMerchantsCheckoutOptionsCollection": {
            "properties": {
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                },
                "smart_devices": {
                    "description": "Smart devices",
                    "type": "object",
                    "$ref": "#/definitions/GeneralMerchantsCheckoutOptionsCollectionSmartDevices"
                }
            },
            "type": "object"
        },
        "GeneralMerchantsCheckoutOptionsCollectionSmartDevices": {
            "properties": {
                "object": {
                    "description": "Object of smart device",
                    "type": "string"
                },
                "id": {
                    "description": "Id of smart device",
                    "type": "string",
                    "format": "id"
                },
                "description": {
                    "description": "Description of smart device",
                    "type": "string"
                },
                "store": {
                    "description": "Store",
                    "type": "object",
                    "$ref": "#/definitions/Store"
                }
            },
            "type": "object"
        },
        "GeneralMerchantsUrls": {
            "properties": {
                "type": {
                    "description": "Type of urls",
                    "type": "string"
                },
                "url": {
                    "description": "Url",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GeneralMerchantsDTO": {
            "properties": {
                "legal_details": {
                    "description": "Legal details",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GeneralMerchantsLegalDetails"
                    }
                },
                "checkout_options": {
                    "description": "Checkout options",
                    "type": "object",
                    "$ref": "#/definitions/GeneralMerchantsCheckoutOptions"
                },
                "urls": {
                    "description": "Urls",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GeneralMerchantsUrls"
                    }
                }
            },
            "type": "object"
        },
        "GeneralStoresProductModel": {
            "properties": {
                "object": {
                    "description": "Object of general store",
                    "type": "string"
                },
                "id": {
                    "description": "Id of general store",
                    "type": "string",
                    "format": "id"
                },
                "id_old": {
                    "description": "Old id of general store",
                    "type": "string",
                    "format": "id"
                },
                "merchant": {
                    "description": "General merchant of general store",
                    "type": "object",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "facebook_id": {
                    "description": "Facebook id",
                    "type": "string"
                },
                "source": {
                    "description": "Source",
                    "type": "string"
                },
                "key": {
                    "description": "Key",
                    "type": "string"
                },
                "hash": {
                    "description": "Hash",
                    "type": "string"
                },
                "address_components": {
                    "description": "Address components",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AddressComponents"
                    }
                },
                "address_formatted": {
                    "description": "General store formatted address",
                    "type": "string"
                },
                "phone_number_formatted": {
                    "description": "General store formatted phone number",
                    "type": "string"
                },
                "geometry": {
                    "description": "General store geometry",
                    "type": "string"
                },
                "name": {
                    "description": "General store name",
                    "type": "string"
                },
                "name_raw": {
                    "description": "General store raw name",
                    "type": "string"
                },
                "photo_main": {
                    "description": "General store main photo",
                    "type": "string"
                },
                "photo": {
                    "description": "General store photos",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category_main": {
                    "description": "General store main category",
                    "type": "string"
                },
                "category": {
                    "description": "General store category",
                    "type": "string"
                },
                "url_googleplus": {
                    "description": "Url to general store google plus",
                    "type": "string"
                },
                "url_website": {
                    "description": "Url to general store website",
                    "type": "string"
                },
                "open_hours": {
                    "description": "Open hours in every day",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OpenHours"
                    }
                },
                "open_now": {
                    "description": "Open now",
                    "type": "boolean"
                },
                "open_time": {
                    "description": "Open time",
                    "type": "string"
                },
                "utc_offset": {
                    "description": "Utc offset",
                    "type": "string"
                },
                "assigned_by": {
                    "description": "Assigned by",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssignedBy"
                    }
                },
                "invited_by": {
                    "description": "Invited by",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InvitedBy"
                    }
                },
                "has_beacon": {
                    "description": "Has beacon",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GeneralStoresDTOReason": {
            "properties": {
                "reason": {
                    "description": "Reason",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GeneralStoresDTOType": {
            "properties": {
                "type": {
                    "description": "Type",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GeneralStoresDTO": {
            "properties": {
                "address": {
                    "description": "New address",
                    "type": "object",
                    "$ref": "#/definitions/Address"
                },
                "facebook_id": {
                    "description": "New facebook id",
                    "type": "string"
                },
                "phone": {
                    "description": "New phone number",
                    "type": "string"
                },
                "url_website": {
                    "description": "New url to general store website",
                    "type": "string"
                },
                "photo_main": {
                    "description": "New main photo",
                    "type": "string"
                },
                "photo": {
                    "description": "New photos",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "open_hours": {
                    "description": "Open hours in every day",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OpenHours"
                    }
                }
            },
            "type": "object"
        },
        "LoyaltyCardgroupsProductModel": {
            "properties": {
                "object": {
                    "description": "Object of loyalty card group",
                    "type": "string"
                },
                "id": {
                    "description": "Id of loyalty card group",
                    "type": "string",
                    "format": "id"
                },
                "merchant": {
                    "description": "Loyalty card group merchant",
                    "$ref": "#/definitions/LoyaltyCardgroupsDTOMerchant"
                },
                "display_name": {
                    "description": "Loyalty card group display name",
                    "type": "string"
                },
                "display_name_raw": {
                    "description": "Loyalty card group display name raw",
                    "type": "string"
                },
                "stock_warn_limit": {
                    "description": "Loyalty card group stock warn limit",
                    "type": "string"
                },
                "picture": {
                    "description": "Loyalty card group picture",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoyaltyCardgroupsDTO": {
            "properties": {
                "display_name": {
                    "description": "Display name",
                    "type": "string"
                },
                "display_name_raw": {
                    "description": "Display name raw",
                    "type": "string"
                },
                "stock_warn_limit": {
                    "description": "Stock warn limit",
                    "type": "string"
                },
                "picture": {
                    "description": "Picture",
                    "type": "string"
                },
                "merchant": {
                    "description": "LoyaltyCardgroupsDTO",
                    "type": "object",
                    "$ref": "#/definitions/LoyaltyCardgroupsDTOMerchant"
                }
            },
            "type": "object"
        },
        "LoyaltyCardgroupsDTOMerchant": {
            "properties": {
                "id": {
                    "description": "Merchant id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoyaltyCardgroupsDTOCheckPasscodeEnabled": {
            "properties": {
                "action": {
                    "description": "Action type",
                    "type": "string"
                },
                "cardnumber": {
                    "description": "Secucard number",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoyaltyCardsProductModel": {
            "properties": {
                "object": {
                    "description": "Object of loyalty card",
                    "type": "string"
                },
                "id": {
                    "description": "Id of loyalty card",
                    "type": "string"
                },
                "account": {
                    "description": "Loyalty card account",
                    "$ref": "#/definitions/LoyaltyCardsDTOAccount"
                },
                "cardnumber": {
                    "description": "Loyalty card number",
                    "type": "string"
                },
                "created": {
                    "description": "Creation date",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoyaltyCardsDTOAccount": {
            "properties": {
                "object": {
                    "description": "LoyaltyCardsDTOAccount",
                    "type": "string"
                },
                "id": {
                    "description": "LoyaltyCardsDTOAccount",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoyaltyCustomersProductModel": {
            "properties": {
                "object": {
                    "description": "Object of loyalty customer",
                    "type": "string"
                },
                "id": {
                    "description": "Id of loyalty customer",
                    "type": "string"
                },
                "merchant": {
                    "description": "merchant",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "contact": {
                    "description": "Contact",
                    "$ref": "#/definitions/Contact"
                },
                "merchant_contact": {
                    "description": "merchant contact",
                    "$ref": "#/definitions/Contact"
                },
                "account_contact": {
                    "description": "merchant contact",
                    "$ref": "#/definitions/Contact"
                },
                "payment_container": {
                    "description": "payment container",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LoyaltyCustomersPaymentContainerModel"
                    }
                },
                "customernumber": {
                    "description": "Customer number",
                    "type": "string"
                },
                "note": {
                    "description": "Customer number",
                    "type": "string"
                },
                "created": {
                    "description": "Creation date",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoyaltyCustomersContactDTO": {
            "properties": {
                "forename": {
                    "description": "Forename",
                    "type": "string"
                },
                "surname": {
                    "description": "Surname",
                    "type": "string"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone",
                    "type": "string"
                },
                "address": {
                    "description": "Address",
                    "type": "object",
                    "$ref": "#/definitions/Address"
                }
            },
            "type": "object"
        },
        "LoyaltyCustomersDTO": {
            "properties": {
                "merchant": {
                    "description": "merchant",
                    "type": "string"
                },
                "merchant_contact": {
                    "description": "Contact",
                    "$ref": "#/definitions/Contact"
                },
                "age": {
                    "description": "Age",
                    "type": "integer"
                },
                "days_until_birthday": {
                    "description": "Number of days until birthday",
                    "type": "integer"
                },
                "customernumber": {
                    "description": "Customer number",
                    "type": "string"
                },
                "note": {
                    "description": "note",
                    "type": "string"
                },
                "additional_data": {
                    "description": "Consent for communication",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "LoyaltyCustomersPaymentContainerModel": {
            "properties": {
                "object": {
                    "description": "LoyaltyCustomersPaymentContainerModel",
                    "type": "string"
                },
                "id": {
                    "description": "LoyaltyCustomersPaymentContainerModel",
                    "type": "string"
                },
                "type": {
                    "description": "LoyaltyCustomersPaymentContainerModel",
                    "type": "string"
                },
                "payment_information": {
                    "description": "Payment instrument data",
                    "$ref": "#/definitions/BankAccountDescriptor"
                },
                "last_usage": {
                    "description": "Last Usage date",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoyaltyMerchantcardsProductModel": {
            "properties": {
                "object": {
                    "description": "Object of loyalty merchant card",
                    "type": "string"
                },
                "id": {
                    "description": "Id of loyalty merchant card",
                    "type": "string",
                    "format": "id"
                },
                "card": {
                    "description": "Id of loyalty store group",
                    "$ref": "#/definitions/LoyaltyCardsProductModel"
                },
                "merchant": {
                    "description": "Current merchant id",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "created_for_merchant": {
                    "description": "Merchant id, that loyalty merchant card object was created for",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "created_for_store": {
                    "description": "Store id, that loyalty merchant card object was created for",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "customer": {
                    "description": "Loyalty merchant card customer",
                    "$ref": "#/definitions/LoyaltyCustomersProductModel"
                },
                "cardgroup": {
                    "description": "Loyalty merchant card card group",
                    "$ref": "#/definitions/LoyaltyCardgroupsProductModel"
                },
                "payment_container": {
                    "description": "Loyalty merchant card payment container",
                    "$ref": "#/definitions/LoyaltyMerchantcardsDTOPaymentContainer"
                },
                "balance": {
                    "description": "Loyalty merchant card balance",
                    "type": "integer"
                },
                "points": {
                    "description": "Loyalty merchant card points",
                    "type": "integer"
                },
                "bonus_balance": {
                    "description": "Loyalty merchant card bonus balance",
                    "type": "integer"
                },
                "cash_balance": {
                    "description": "Loyalty merchant card cash balance",
                    "type": "integer"
                },
                "stock_status": {
                    "description": "Loyalty merchant card stock status",
                    "type": "string"
                },
                "lock_status": {
                    "description": "Loyalty merchant card lock status",
                    "type": "string"
                },
                "last_usage": {
                    "description": "Loyalty merchant card last usage",
                    "type": "string"
                },
                "last_charge": {
                    "description": "Loyalty merchant card last charge",
                    "type": "string"
                },
                "is_base_card": {
                    "description": "Information whether loyalty merchant card is base card",
                    "type": "boolean"
                },
                "passcode": {
                    "description": "Loyalty merchant card passcode",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoyaltyMerchantcardsProductWithReceiptModel": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/LoyaltyMerchantcardsProductModel"
                },
                {
                    "properties": {
                        "receipt_header": {
                            "description": "Receipt header",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReceiptType"
                            }
                        },
                        "receipt": {
                            "description": "Receipt",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReceiptTypeValue"
                            }
                        }
                    }
                }
            ]
        },
        "ReceiptTypeValue": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ReceiptType"
                },
                {
                    "properties": {
                        "value": {
                            "description": "Value object",
                            "type": "object",
                            "$ref": "#/definitions/ReceiptValue"
                        }
                    }
                }
            ]
        },
        "ReceiptType": {
            "properties": {
                "type": {
                    "description": "Type",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReceiptValue": {
            "properties": {
                "caption": {
                    "description": "Caption",
                    "type": "string"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "text": {
                    "description": "Text",
                    "type": "string"
                },
                "decoration": {
                    "description": "Decoration",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "LoyaltyMerchantcardsValidateMerchantCard": {
            "properties": {
                "isValid": {
                    "description": "Result has true or false value",
                    "type": "boolean"
                },
                "hasPasscode": {
                    "description": "Result has true or false value",
                    "type": "boolean"
                },
                "isLocked": {
                    "description": "Result has true or false value",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LoyaltyMerchantcardsDTOPaymentContainer": {
            "properties": {
                "object": {
                    "description": "Object of payment container",
                    "type": "string"
                },
                "id": {
                    "description": "Id of payment container",
                    "type": "string",
                    "format": "id"
                },
                "type": {
                    "description": "Type of payment container",
                    "type": "string"
                },
                "payment_information": {
                    "description": "Payment information",
                    "type": "object",
                    "$ref": "#/definitions/PaymentInformation"
                }
            },
            "type": "object"
        },
        "LoyaltyMerchantcardsDTO": {
            "properties": {
                "merchant": {
                    "description": "General merchant id",
                    "type": "string"
                },
                "card": {
                    "description": "Loyalty card id",
                    "type": "string"
                },
                "payment_container": {
                    "description": "Loyalty payment container id",
                    "type": "string"
                },
                "created_by_merchant": {
                    "description": "Created by general merchant or not",
                    "type": "boolean"
                },
                "used_by_merchant": {
                    "description": "Used by general merchant or not",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LoyaltyMerchantcardsDTOLock": {
            "properties": {
                "lock_status": {
                    "description": "Lock status",
                    "type": "string"
                },
                "reason": {
                    "description": "Lock reason",
                    "type": "string"
                },
                "note": {
                    "description": "Lock note",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "VirtualTerminalData": {
            "properties": {
                "store": {
                    "description": "Store",
                    "type": "object"
                },
                "tid": {
                    "description": "Terminal id",
                    "type": "string"
                },
                "actions": {
                    "description": "Actions",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gift_terminal": {
                    "description": "Gift terminal",
                    "type": "integer"
                },
                "amount_split_enabled": {
                    "description": "Amount split enabled",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoyaltyMerchantcardsDTOCsc": {
            "properties": {
                "cardnumber": {
                    "description": "Card number",
                    "type": "integer"
                },
                "csc": {
                    "description": "Card security code",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoyaltyMerchantcardsDTOTransaction": {
            "properties": {
                "action": {
                    "description": "Action",
                    "type": "string"
                },
                "terminal_id": {
                    "description": "Terminal id",
                    "type": "string"
                },
                "amount": {
                    "description": "Amount",
                    "type": "integer"
                },
                "tid": {
                    "description": "Tid",
                    "type": "string"
                },
                "store": {
                    "description": "Store id",
                    "type": "string"
                },
                "cardnumber": {
                    "description": "Card number",
                    "type": "integer"
                },
                "bonus_amount": {
                    "description": "Bonus amount",
                    "type": "integer"
                },
                "amount_split_allowed": {
                    "description": "Amount split allowed",
                    "type": "string"
                },
                "merchant_id": {
                    "description": "Merchant id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoyaltyMerchantcardsDTOValidateMerchantCard": {
            "properties": {
                "merchant": {
                    "description": "General Merchant id",
                    "type": "string"
                },
                "cardnumber": {
                    "description": "Loyalty Card number",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoyaltyMerchantcardsDTONewPasscode": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/LoyaltyMerchantcardsDTOValidateMerchantCard"
                },
                {
                    "properties": {
                        "passcode": {
                            "description": "Loyalty Card passcode",
                            "type": "integer"
                        }
                    }
                }
            ]
        },
        "LoyaltyMerchantcardsDTOCheckPasscode": {
            "properties": {
                "cardnumber": {
                    "description": "Loyalty Card number",
                    "type": "integer"
                },
                "pin": {
                    "description": "Loyalty Card pin",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoyaltyMerchantcardsDTOResetPasscode": {
            "properties": {
                "cardnumber": {
                    "description": "Loyalty Card number",
                    "type": "integer"
                },
                "passcode": {
                    "description": "Loyalty Card passcode",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoyaltyMerchantcardsDTOCardsAmount": {
            "properties": {
                "cards_amount": {
                    "description": "Cards amount",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoyaltyStoregroupsProductModel": {
            "properties": {
                "object": {
                    "description": "Object of loyalty store group",
                    "type": "string"
                },
                "id": {
                    "description": "Id of loyalty store group",
                    "type": "string",
                    "format": "id"
                },
                "merchant": {
                    "description": "Merchant data for loyalty",
                    "$ref": "#/definitions/LoyaltyDTOMerchant"
                },
                "stores": {
                    "description": "LoyaltyStoregroupsProductModel",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LoyaltyDTOStore"
                    }
                },
                "created": {
                    "description": "Creation date",
                    "type": "string"
                },
                "updated": {
                    "description": "Update date",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoyaltyDTOMerchant": {
            "properties": {
                "object": {
                    "description": "LoyaltyDTOMerchant",
                    "type": "string"
                },
                "id": {
                    "description": "LoyaltyDTOMerchant",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoyaltyDTOStore": {
            "properties": {
                "object": {
                    "description": "LoyaltyDTOStore",
                    "type": "string"
                },
                "id": {
                    "description": "LoyaltyDTOStore",
                    "type": "string"
                },
                "address_components": {
                    "description": "LoyaltyDTOStore",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LoyaltyStoregroupsDTOStoresAddressComponents"
                    }
                },
                "address_formatted": {
                    "description": "Address formatted",
                    "type": "string"
                },
                "geometry": {
                    "description": "Geometry",
                    "type": "string"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "name_raw": {
                    "description": "Raw name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoyaltyStoregroupsDTOStoresAddressComponents": {
            "properties": {
                "long_name": {
                    "description": "Long name",
                    "type": "string"
                },
                "short_name": {
                    "description": "Short name",
                    "type": "string"
                },
                "types": {
                    "description": "Types",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoyaltyStoregroupsDTO": {
            "properties": {
                "name": {
                    "description": "Loyalty store group name",
                    "type": "string"
                },
                "merchant": {
                    "description": "Loyalty store group merchant id",
                    "type": "string"
                },
                "stores": {
                    "description": "List of loyalty stores ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "PaymentContainersProductModel": {
            "properties": {
                "object": {
                    "description": "Object of payment container",
                    "type": "string"
                },
                "id": {
                    "description": "Id of payment container",
                    "type": "string",
                    "format": "id"
                },
                "contract": {
                    "description": "Payment container contract",
                    "$ref": "#/definitions/PaymentContractsProductModel"
                },
                "customer": {
                    "description": "Payment container customer",
                    "$ref": "#/definitions/PaymentCustomersProductModel"
                },
                "assign": {
                    "description": "Assign to",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "type": {
                    "description": "Type of payment container",
                    "type": "string"
                },
                "public": {
                    "description": "Public payment instrument data",
                    "$ref": "#/definitions/BankAccountDescriptor"
                },
                "private": {
                    "description": "Private payment instrument data",
                    "$ref": "#/definitions/BankAccountDescriptor"
                },
                "created": {
                    "description": "Creation date",
                    "type": "string"
                },
                "updated": {
                    "description": "Last update date",
                    "type": "string"
                },
                "mandate": {
                    "description": "Payment container mandate",
                    "$ref": "#/definitions/PaymentContainerMandate"
                }
            },
            "type": "object"
        },
        "PaymentContainersDTO": {
            "properties": {
                "customer": {
                    "description": "The customer of this payment container",
                    "properties": {
                        "id": {
                            "description": "Customer identifier",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "description": "Type of Payment Containers",
                    "type": "string"
                },
                "private": {
                    "description": "",
                    "properties": {
                        "owner": {
                            "description": "PaymentContainersDTO",
                            "type": "string"
                        },
                        "iban": {
                            "description": "PaymentContainersDTO",
                            "type": "string"
                        },
                        "bic": {
                            "description": "PaymentContainersDTO",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PaymentContainerMandate": {
            "properties": {
                "sepa_mandate_id": {
                    "description": "Sepa mandate id",
                    "type": "string"
                },
                "iban": {
                    "description": "IBAN",
                    "type": "string"
                },
                "bic": {
                    "description": "BIC",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "identification": {
                    "description": "Identification",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PaymentContractsProductModel": {
            "properties": {
                "object": {
                    "description": "Object of payment contract",
                    "type": "string",
                    "example": "payment.contracts"
                },
                "id": {
                    "description": "Id of payment contract",
                    "type": "string",
                    "format": "id",
                    "example": "PCR_W8VVN3QCN2M7690ZR5GQGH5YJNVVAU"
                },
                "parent": {
                    "description": "Payment contract",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "demo": {
                    "description": "Is this a demo contract",
                    "type": "boolean"
                },
                "allow_cloning": {
                    "description": "Allow to create sub-contracts",
                    "type": "boolean"
                },
                "sepa_mandate_inform": {
                    "description": "Inform the customer about the created sepa mandate",
                    "type": "string",
                    "default": "never",
                    "example": "never"
                },
                "created": {
                    "description": "Created at date",
                    "type": "string"
                },
                "updated": {
                    "description": "Updated at date",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PaymentContractsDTO": {
            "properties": {
                "merchant": {
                    "description": "Contracts Merchant",
                    "type": "string"
                },
                "internal_reference": {
                    "description": "The internal user id",
                    "type": "string"
                },
                "contract_id": {
                    "description": "Contracts id",
                    "type": "string"
                },
                "demo": {
                    "description": "Is this a demo contract",
                    "type": "string"
                },
                "debit_product_id": {
                    "description": "Contract debit product id",
                    "type": "string"
                },
                "prepay_product_id": {
                    "description": "Contracts prepay product id",
                    "type": "string"
                },
                "invoice_product_id": {
                    "description": "Contracts invoice product id",
                    "type": "string"
                },
                "creditcard_product_id": {
                    "description": "Contracts credit card product id",
                    "type": "string"
                },
                "url_push": {
                    "description": "An URL where your service listen for push notifications of the secuconnect service",
                    "type": "string"
                },
                "allow_transactions": {
                    "description": "Should allow transactions?",
                    "type": "boolean"
                },
                "allow_cloning": {
                    "description": "Should allow cloning?",
                    "type": "boolean"
                },
                "unique_order_id": {
                    "description": "Bool, default FALSE. If TRUE, an error message will be thrown if you try to create a new payment transaction with the same order_id of an previous transaction.",
                    "type": "boolean"
                },
                "scoring": {
                    "description": "Bool, default TRUE. If FALSE, the customer scoring is disabled for your payment contract",
                    "type": "boolean"
                },
                "sepa_mandate_inform": {
                    "description": "Enum [on_transaction, on_container, never], default \u201cnever\u201d Option to send automatically an information to the customer when a new SEPA-mandate was created.",
                    "type": "string"
                }
            }
        },
        "PaymentContractsDTOClone": {
            "properties": {
                "project": {
                    "description": "Name of the project (must be unique)",
                    "type": "string",
                    "example": "My super fancy project #1"
                },
                "payment_data": {
                    "description": "Merchants bank account for the payout",
                    "type": "object",
                    "$ref": "#/definitions/PaymentInformation"
                },
                "payin_account": {
                    "description": "Pay in account",
                    "type": "boolean",
                    "default": "false"
                },
                "allow_transactions": {
                    "description": "DEPRECATED: Should allow transactions for this sub-contract?",
                    "type": "boolean"
                },
                "url_push": {
                    "description": "The default URL where your service listen for push notifications of the secuconnect service",
                    "type": "string",
                    "example": "https://example.com/"
                },
                "debit_product_id": {
                    "description": "DEPRECATED: Contract debit product id",
                    "type": "string"
                },
                "prepay_product_id": {
                    "description": "DEPRECATED: Contracts prepay product id",
                    "type": "string"
                },
                "invoice_product_id": {
                    "description": "DEPRECATED: Contracts invoice product id",
                    "type": "string"
                },
                "creditcard_product_id": {
                    "description": "DEPRECATED: Contracts credit card product id",
                    "type": "string"
                }
            }
        },
        "PaymentContractsDTORequestId": {
            "properties": {
                "contact": {
                    "description": "Contact",
                    "type": "object",
                    "$ref": "#/definitions/Contact"
                },
                "project": {
                    "description": "Name of the project (must be unique)",
                    "type": "string",
                    "example": "My super fancy project #1"
                },
                "payout_account": {
                    "description": "Merchants bank account for the payout",
                    "type": "object",
                    "$ref": "#/definitions/PaymentInformation"
                },
                "iframe_opts": {
                    "description": "IFrame opts",
                    "type": "object",
                    "$ref": "#/definitions/PaymentContractsDTOIFrameOpts"
                },
                "payin_account": {
                    "description": "Pay in account",
                    "type": "boolean",
                    "default": "false"
                }
            }
        },
        "PaymentContractsDTOIFrameOpts": {
            "properties": {
                "show_basket": {
                    "description": "Display the basket items to the customer during the checkout",
                    "type": "boolean",
                    "example": "true"
                },
                "basket_title": {
                    "description": "Default headline of the checkout page",
                    "type": "string",
                    "example": "Projext XY unterst\u00fctzen"
                },
                "submit_button_title": {
                    "description": "Default naming of the Submit-Button",
                    "type": "string",
                    "example": "Zahlungspflichtig unterst\u00fctzen"
                },
                "logo_base64": {
                    "description": "Logo base64-enconded",
                    "type": "string"
                },
                "cession": {
                    "description": "Cession ('formal', 'personal')",
                    "type": "string",
                    "default": "personal"
                }
            }
        },
        "PaymentCustomersProductModel": {
            "properties": {
                "object": {
                    "description": "Object of payment customer",
                    "type": "string"
                },
                "id": {
                    "description": "Id of payment customer",
                    "type": "string",
                    "format": "id"
                },
                "contract": {
                    "description": "Payment contract",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "contact": {
                    "description": "Customer contact info",
                    "$ref": "#/definitions/Contact"
                },
                "created": {
                    "description": "Created at date",
                    "type": "string"
                },
                "updated": {
                    "description": "Updated at date",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PaymentCustomersDTO": {
            "properties": {
                "contact": {
                    "description": "PaymentCustomersDTO",
                    "type": "object",
                    "$ref": "#/definitions/Contact"
                }
            },
            "type": "object"
        },
        "SecupayTransactionProductModel": {
            "properties": {
                "object": {
                    "description": "Product name",
                    "type": "string"
                },
                "id": {
                    "description": "ID of instance",
                    "type": "string"
                },
                "trans_id": {
                    "description": "Transaction identifier",
                    "type": "integer"
                },
                "status": {
                    "description": "Transaction status",
                    "type": "string"
                },
                "amount": {
                    "description": "Total amount of payment in cents (or the smallest cash unit of the relevant currency)",
                    "type": "integer"
                },
                "currency": {
                    "description": "ISO 4217 code of currency, eg EUR for Euro.",
                    "type": "string"
                },
                "purpose": {
                    "description": "The purpose of the payment. This is the later assignment of the payment is for example on the account statement of the buyer.",
                    "type": "string"
                },
                "order_id": {
                    "description": "Specifying an order number. Depending on the contract setting, this must be unique for each payment.",
                    "type": "string"
                },
                "basket": {
                    "description": "A list of items that are being purchased.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecupayBasketItem"
                    }
                },
                "transaction_status": {
                    "description": "Transaction status (number)",
                    "type": "string"
                },
                "accrual": {
                    "description": "Indicates whether the payment is locked for pay-out (TRUE) or not (FALSE). Standard value here is FALSE.",
                    "type": "boolean"
                },
                "payment_action": {
                    "description": "Specifies whether a pre-authorization (\"authorization\") or instant payment ( \"sale\") is to be performed. Standard value here is \"sale\". The collection of the pre-authorized payment is made with the \"capture\" command.",
                    "type": "string"
                },
                "transfer_purpose": {
                    "description": "The purpose the payer needs to use for his transfer",
                    "type": "string"
                },
                "transfer_account": {
                    "description": "The bank account the payer needs to use for his transfer",
                    "type": "object",
                    "$ref": "#/definitions/PaymentInformation"
                },
                "customer": {
                    "description": "The customer object",
                    "type": "object",
                    "$ref": "#/definitions/PaymentCustomersProductModel"
                },
                "used_payment_instrument": {
                    "description": "The payment data which has the payer used (like bank account, credit card, ...). This data is always masked.",
                    "properties": {
                        "type": {
                            "description": "The type of the payment instrument data, like: 'bank_account' or 'credit_card'",
                            "type": "string"
                        },
                        "data": {
                            "description": "Holds the payment instrument data",
                            "type": "object",
                            "$ref": "#/definitions/BankAccountDescriptor"
                        }
                    },
                    "type": "object"
                },
                "redirect_url": {
                    "description": "A list of redirect urls used for the payment checkout page",
                    "type": "object",
                    "$ref": "#/definitions/SecupayRedirectUrl"
                },
                "iframe_url": {
                    "description": "The url of the payment checkout iframe",
                    "type": "string"
                },
                "container": {
                    "description": "The container object",
                    "type": "object",
                    "$ref": "#/definitions/PaymentContainersProductModel"
                }
            },
            "type": "object"
        },
        "SecupayTransactionProductDTO": {
            "properties": {
                "amount": {
                    "description": "Total amount of payment in cents (or the smallest cash unit of the relevant currency)",
                    "type": "integer"
                },
                "currency": {
                    "description": "ISO 4217 code of currency, eg EUR for Euro.",
                    "type": "string"
                },
                "purpose": {
                    "description": "The purpose of the payment. This is the later assignment of the payment is for example on the account statement of the buyer.",
                    "type": "string"
                },
                "order_id": {
                    "description": "Specifying an order number. Depending on the contract setting, this must be unique for each payment.",
                    "type": "string"
                },
                "basket": {
                    "description": "A list of items that are being purchased.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecupayBasketItem"
                    }
                },
                "accrual": {
                    "description": "Indicates whether the payment is locked for pay-out (TRUE) or not (FALSE). Standard value here is FALSE.",
                    "type": "boolean"
                },
                "payment_action": {
                    "description": "Specifies whether a pre-authorization (\"authorization\") or instant payment (\"sale\") is to be performed. Standard value here is \"sale\". The collection of the pre-authorized payment is made with the \"capture\" command.",
                    "type": "string"
                },
                "customer": {
                    "description": "The customer object",
                    "type": "object",
                    "$ref": "#/definitions/PaymentCustomersProductModel"
                },
                "redirect_url": {
                    "description": "A list of redirect urls used for the payment checkout page",
                    "type": "object",
                    "$ref": "#/definitions/SecupayRedirectUrl"
                },
                "contract": {
                    "description": "Contract id",
                    "type": "string"
                },
                "container": {
                    "description": "Container id",
                    "type": "string"
                },
                "opt_data": {
                    "description": "Options for customizing the checkout page",
                    "properties": {
                        "has_accepted_disclaimer": {
                            "description": "Customer accepted disclaimer",
                            "type": "string"
                        },
                        "language": {
                            "description": "Client language",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "subscription": {
                    "description": "Recurring payments",
                    "properties": {
                        "purpose": {
                            "description": "The purpose of the subscription",
                            "type": "string"
                        },
                        "id": {
                            "description": "Id of subscription, if exists",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "demo": {
                    "description": "Demo",
                    "type": "boolean"
                },
                "experience": {
                    "description": "Customer experience score",
                    "properties": {
                        "positive": {
                            "description": "Score of positive experience (paid orders)",
                            "type": "integer"
                        },
                        "negative": {
                            "description": "Score of negative experience (open/unpaid orders)",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SecupayRedirectUrl": {
            "properties": {
                "iframe_url": {
                    "description": "The url of the payment checkout iframe",
                    "type": "string"
                },
                "url_success": {
                    "description": "After successfully entering the cash data of the payer is returned to this page.",
                    "type": "string"
                },
                "url_failure": {
                    "description": "After canceling or on errors the payer will be redirected to this page and can select there an another payment method.",
                    "type": "string"
                },
                "url_push": {
                    "description": "The secupay system will be send status change notifications to this URL.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecupayBasketItem": {
            "description": "Item describing single position in basket in transaction",
            "properties": {
                "item_type": {
                    "description": "Category of item",
                    "type": "string",
                    "default": "article"
                },
                "article_number": {
                    "description": "Article number of item",
                    "type": "string"
                },
                "quantity": {
                    "description": "Quantity of articles in item",
                    "type": "integer"
                },
                "name": {
                    "description": "Descriptive name of item",
                    "type": "string"
                },
                "model": {
                    "description": "Model of item",
                    "type": "string"
                },
                "ean": {
                    "description": "EAN, European Article Number",
                    "type": "string"
                },
                "tax": {
                    "description": "Applicable tax in percentages",
                    "type": "string"
                },
                "total": {
                    "description": "Total price",
                    "type": "integer"
                },
                "price": {
                    "description": "Price of single article, if item is of article category",
                    "type": "integer"
                },
                "apikey": {
                    "description": "Special param for stakeholder payments",
                    "type": "string"
                },
                "transaction_hash": {
                    "description": "Special param for payout payments",
                    "type": "string"
                },
                "contract_id": {
                    "description": "Contract id - Special param for stakeholder payments",
                    "type": "string"
                },
                "reference_id": {
                    "description": "Reference id - must be unique for the entire basket",
                    "type": "string"
                },
                "sub_basket": {
                    "description": "Mixed-Basket: All basket items for one merchant.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecupayBasketItem"
                    }
                }
            }
        },
        "SecupayTransactionDTOExternalInvoicePdf": {
            "properties": {
                "update_existing": {
                    "description": "Update existing invoice PDF",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SecupayTransactionExternalInvoicePdf": {
            "properties": {
                "document": {
                    "description": "Information about the saved document",
                    "properties": {
                        "id": {
                            "description": "The Document File ID",
                            "type": "string"
                        },
                        "mime_type": {
                            "description": "The MIME Type",
                            "type": "string"
                        },
                        "name": {
                            "description": "The file name",
                            "type": "string"
                        },
                        "size": {
                            "description": "The size of the file in bytes",
                            "type": "integer"
                        },
                        "url": {
                            "description": "The download-url to this file",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SecupayTransactionCancelDTO": {
            "properties": {
                "contract": {
                    "description": "The payment contract object",
                    "type": "object"
                },
                "amount": {
                    "description": "partial or full refund amount, \"0\" means full refund",
                    "type": "integer",
                    "default": "0"
                },
                "reduce_stakeholder_payment": {
                    "description": "Mixed-Basket: (percentage) reduce the stakeholder amount too",
                    "type": "boolean",
                    "default": "false"
                }
            },
            "type": "object"
        },
        "SecupayTransactionCaptureDTO": {
            "properties": {
                "contract": {
                    "description": "The payment contract object",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SecupayTransactionUpdateBasketDTO": {
            "properties": {
                "contract": {
                    "description": "The payment contract object",
                    "type": "object"
                },
                "basket": {
                    "description": "A list of items that are being purchased.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecupayBasketItem"
                    }
                }
            },
            "type": "object"
        },
        "SecupayTransactionReverseAccrualDTO": {
            "properties": {
                "accrual": {
                    "description": "Indicates whether the payment is locked for pay-out (TRUE) or not (FALSE).",
                    "type": "boolean",
                    "default": "false"
                }
            },
            "type": "object"
        },
        "SecupayTransactionSetShippingInformationDTO": {
            "properties": {
                "carrier": {
                    "description": "Shipping provider name",
                    "type": "string"
                },
                "tracking_id": {
                    "description": "Tracking-ID",
                    "type": "string"
                },
                "invoice_number": {
                    "description": "Merchants invoice number",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecupayPayoutProductModel": {
            "properties": {
                "object": {
                    "description": "Product name",
                    "type": "string"
                },
                "id": {
                    "description": "ID of instance",
                    "type": "string"
                },
                "trans_id": {
                    "description": "ID of transaction",
                    "type": "integer"
                },
                "status": {
                    "description": "Transaction status",
                    "type": "string"
                },
                "amount": {
                    "description": "Total amount of transaction lit's items",
                    "type": "integer"
                },
                "currency": {
                    "description": "ISO 4217 code of currency, eg EUR for Euro.",
                    "type": "string"
                },
                "purpose": {
                    "description": "The purpose of the payment. This is the later assignment of the payment is for example on the account statement of the buyer.",
                    "type": "string"
                },
                "order_id": {
                    "description": "Specifying an order number. Depending on the contract setting, this must be unique for each payment.",
                    "type": "string"
                },
                "transaction_status": {
                    "description": "Transaction status (number)",
                    "type": "string"
                },
                "transaction_list": {
                    "description": "A list of transaction items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecupayTransactionListItem"
                    }
                },
                "transfer_purpose": {
                    "description": "The purpose the payer needs to use for his transfer",
                    "type": "string"
                },
                "transfer_account": {
                    "description": "The bank account the payer needs to use for his transfer",
                    "type": "object",
                    "$ref": "#/definitions/PaymentInformation"
                }
            },
            "type": "object"
        },
        "SecupayTransactionListItem": {
            "properties": {
                "item_type": {
                    "description": "Category of item",
                    "type": "string",
                    "default": "transaction_payout"
                },
                "reference_id": {
                    "description": "Reference id - must be unique for the entire basket",
                    "type": "string"
                },
                "name": {
                    "description": "Item name",
                    "type": "string"
                },
                "transaction_hash": {
                    "description": "Id of transaction",
                    "type": "string",
                    "example": [
                        "pbkacphkbuem2772626"
                    ]
                },
                "transaction_id": {
                    "description": "Id of transaction",
                    "type": "string",
                    "example": [
                        "PCI_WR67G325XTG2R45JJDNBG048PW4BN4"
                    ]
                },
                "container": {
                    "description": "Payment Container ID",
                    "type": "string",
                    "example": [
                        "PCT_2BV27QVYR2N26P2S5H3G98G66X9JAJ"
                    ]
                },
                "total": {
                    "description": "Total price",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SecupayPayoutDTO": {
            "properties": {
                "demo": {
                    "description": "demo env value",
                    "type": "integer"
                },
                "redirect_url": {
                    "description": "A list of redirect urls used for the payment checkout page",
                    "type": "object",
                    "$ref": "#/definitions/SecupayRedirectUrl"
                },
                "customer": {
                    "description": "The customer object",
                    "type": "object",
                    "$ref": "#/definitions/PaymentCustomersProductModel"
                },
                "opt_data": {
                    "description": "Options for customizing the checkout page",
                    "properties": {
                        "language": {
                            "description": "Client language",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "amount": {
                    "description": "Total amount of transaction lit's items",
                    "type": "integer"
                },
                "currency": {
                    "description": "ISO 4217 code of currency, eg EUR for Euro.",
                    "type": "string"
                },
                "purpose": {
                    "description": "The purpose of the payment. This is the later assignment of the payment is for example on the account statement of the buyer.",
                    "type": "string"
                },
                "order_id": {
                    "description": "Specifying an order number. Depending on the contract setting, this must be unique for each payment.",
                    "type": "string"
                },
                "transaction_list": {
                    "description": "A list of transaction items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecupayTransactionListItem"
                    }
                }
            },
            "type": "object"
        },
        "PaymentTransactionsProductModel": {
            "properties": {
                "object": {
                    "description": "Object of payment transaction",
                    "type": "string"
                },
                "id": {
                    "description": "Id of payment transaction",
                    "type": "string",
                    "format": "id"
                },
                "merchant": {
                    "description": "Merchant information",
                    "properties": {
                        "object": {
                            "description": "Type of product",
                            "type": "string"
                        },
                        "id": {
                            "description": "Identifier of product",
                            "type": "string"
                        },
                        "type": {
                            "description": "Type of merchant",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "trans_id": {
                    "description": "Transaction identifier",
                    "type": "integer"
                },
                "product_id": {
                    "description": "Product identifier",
                    "type": "integer"
                },
                "product": {
                    "description": "Product type",
                    "type": "string"
                },
                "product_raw": {
                    "description": "the name of the payment product",
                    "type": "string"
                },
                "zahlungsmittel_id": {
                    "description": "The internal id of the stored payment instrument.",
                    "type": "integer"
                },
                "contract_id": {
                    "description": "Contract identifier",
                    "type": "integer"
                },
                "amount": {
                    "description": "Total amount of payment in cents (or the smallest cash unit of the relevant currency)",
                    "type": "integer"
                },
                "currency": {
                    "description": "ISO 4217 code of currency, eg EUR for Euro.",
                    "type": "string"
                },
                "created": {
                    "description": "Created at date",
                    "type": "string"
                },
                "updated": {
                    "description": "Updated at date",
                    "type": "string"
                },
                "status": {
                    "description": "WTF??",
                    "type": "integer"
                },
                "status_text": {
                    "description": "Transaction status",
                    "type": "string"
                },
                "details": {
                    "description": "Transaction details",
                    "properties": {
                        "amount": {
                            "description": "Total amount of payment in cents (or the smallest cash unit of the relevant currency)",
                            "type": "integer"
                        },
                        "cleared": {
                            "description": "Clearing status",
                            "type": "string"
                        },
                        "status": {
                            "description": "Transaction status ID",
                            "type": "integer"
                        },
                        "status_text": {
                            "description": "Transaction status description",
                            "type": "string"
                        },
                        "status_simple": {
                            "description": "Transaction simple-status ID",
                            "type": "integer"
                        },
                        "status_text_simple": {
                            "description": "Transaction simple-status description",
                            "type": "string"
                        },
                        "description": {
                            "description": "Transaction description",
                            "type": "string"
                        },
                        "description_raw": {
                            "description": "Transaction description (plain text)",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "customer": {
                    "description": "PaymentTransactionsProductModel",
                    "properties": {
                        "object": {
                            "description": "Customer type name",
                            "type": "string"
                        },
                        "id": {
                            "description": "Id of customer",
                            "type": "string",
                            "format": "id"
                        },
                        "companyname": {
                            "description": "Customer company name",
                            "type": "string"
                        },
                        "salutation": {
                            "description": "Customer salutation",
                            "type": "string"
                        },
                        "title": {
                            "description": "Customer title",
                            "type": "string"
                        },
                        "forename": {
                            "description": "Customer forename",
                            "type": "string"
                        },
                        "surname": {
                            "description": "Customer surname",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PaymentTransactionsInstructions": {
            "properties": {
                "lang": {
                    "description": "Language",
                    "type": "string"
                },
                "amount": {
                    "description": "Amount",
                    "type": "integer"
                },
                "currency": {
                    "description": "Currency",
                    "type": "string"
                },
                "payment": {
                    "description": "Payment data",
                    "$ref": "#/definitions/BankAccountDescriptor"
                }
            },
            "type": "object"
        },
        "PrepaidMappingZvt": {
            "properties": {
                "item": {
                    "description": "Prepaid item",
                    "properties": {
                        "id": {
                            "description": "prepaid item id",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "vtc_id": {
                    "description": "Vtc id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PrepaidZvtDTO": {
            "properties": {
                "amount": {
                    "description": "amount",
                    "type": "integer"
                },
                "product_id": {
                    "description": "Product identifier",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PrepaidItemsProductModel": {
            "properties": {
                "object": {
                    "description": "Object of prepaid item",
                    "type": "string"
                },
                "id": {
                    "description": "Id of prepaid item",
                    "type": "string",
                    "format": "id"
                },
                "retail_price": {
                    "description": "Retail price",
                    "type": "integer"
                },
                "currency": {
                    "description": "Currency",
                    "type": "string"
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "logo": {
                    "description": "Logo",
                    "type": "string"
                },
                "commission": {
                    "description": "Commission",
                    "type": "integer"
                },
                "vtc_id": {
                    "description": "Vtc id",
                    "type": "string"
                },
                "itemgroup": {
                    "description": "Item group",
                    "$ref": "#/definitions/ItemGroup"
                },
                "stock_limit_max": {
                    "description": "Stock limit max",
                    "type": "integer"
                },
                "stock_limit_min": {
                    "description": "Stock limit min",
                    "type": "integer"
                },
                "taxable": {
                    "description": "Taxable",
                    "type": "boolean"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PrepaidSalesProductModel": {
            "properties": {
                "object": {
                    "description": "Object of prepaid sale",
                    "type": "string"
                },
                "id": {
                    "description": "Id of prepaid sale",
                    "type": "string",
                    "format": "id"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "stock": {
                    "description": "Prepaid stock",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "item": {
                    "description": "Prepaid item",
                    "$ref": "#/definitions/PrepaidSalesItem"
                },
                "itemgroup": {
                    "description": "Prepaid item group",
                    "$ref": "#/definitions/ItemGroup"
                },
                "smart_device": {
                    "description": "Smart device",
                    "$ref": "#/definitions/PrepaidSalesSmartDevice"
                },
                "merchant": {
                    "description": "General merchant",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "store": {
                    "description": "General store",
                    "$ref": "#/definitions/Store"
                },
                "contract": {
                    "description": "Prepaid contract",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "created": {
                    "description": "Prepaid sale creation date",
                    "type": "string"
                },
                "demo": {
                    "description": "Demo",
                    "type": "boolean"
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "amount": {
                    "description": "Amount",
                    "type": "integer"
                },
                "currency": {
                    "description": "Currency",
                    "type": "string"
                },
                "commission": {
                    "description": "Commission",
                    "type": "integer"
                },
                "commission_currency": {
                    "description": "Commission currency",
                    "type": "string"
                },
                "code": {
                    "description": "Code",
                    "type": "string"
                },
                "serial": {
                    "description": "Serial",
                    "type": "string"
                },
                "cardnumber": {
                    "description": "Card number",
                    "type": "string"
                },
                "expire_date": {
                    "description": "Expire date",
                    "type": "string"
                },
                "provider_delivery_number": {
                    "description": "Provider delivery number",
                    "type": "string"
                },
                "receipt_header": {
                    "description": "Receipt header",
                    "type": "string"
                },
                "receipt_customer": {
                    "description": "Receipt customer",
                    "type": "string"
                },
                "receipt_zvt": {
                    "description": "Receipt zvt",
                    "type": "string"
                },
                "receipt_dealer": {
                    "description": "Receipt dealer",
                    "type": "string"
                },
                "vtc_tid": {
                    "description": "Vtc tid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PrepaidSalesItem": {
            "properties": {
                "object": {
                    "description": "Object of item",
                    "type": "string"
                },
                "id": {
                    "description": "Id of item",
                    "type": "string",
                    "format": "id"
                },
                "description": {
                    "description": "Item description",
                    "type": "string"
                },
                "logo": {
                    "description": "Item logo",
                    "type": "string"
                },
                "type": {
                    "description": "Item type",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PrepaidSalesSmartDevice": {
            "properties": {
                "object": {
                    "description": "Object of smart device",
                    "type": "string"
                },
                "id": {
                    "description": "Id of smart device",
                    "type": "string"
                },
                "description": {
                    "description": "Smart device description",
                    "type": "string"
                },
                "vendor_uid": {
                    "description": "Smart device vendor uid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PrepaidSalesProductDTO": {
            "properties": {
                "item": {
                    "description": "prepaid sales transaction id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmartDevicesProductModel": {
            "properties": {
                "object": {
                    "description": "Object of smart device",
                    "type": "string"
                },
                "id": {
                    "description": "Id of smart device",
                    "type": "string",
                    "format": "id"
                },
                "merchant": {
                    "description": "Merchant",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "store": {
                    "description": "Store",
                    "$ref": "#/definitions/Store"
                },
                "vendor": {
                    "description": "Vendor",
                    "type": "string"
                },
                "vendor_uid": {
                    "description": "Vendor uid",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "device": {
                    "description": "Device",
                    "$ref": "#/definitions/SmartDevicesDevice"
                },
                "routing": {
                    "description": "Routing",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "user_pin": {
                    "description": "User pin",
                    "type": "string"
                },
                "products": {
                    "description": "Products",
                    "$ref": "#/definitions/SmartDevicesProducts"
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "idle_screen_register": {
                    "description": "Idle screen register",
                    "type": "string"
                },
                "idle_screen_terminal": {
                    "description": "Idle screen terminal",
                    "type": "string"
                },
                "created": {
                    "description": "Created at date",
                    "type": "string"
                },
                "online": {
                    "description": "Online",
                    "type": "boolean"
                },
                "terminal_type": {
                    "description": "Terminal type",
                    "type": "string"
                },
                "base_version": {
                    "description": "Base version",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmartDevicesProducts": {
            "properties": {
                "loyalty": {
                    "description": "Loyalty",
                    "$ref": "#/definitions/SmartDeviceProductsEnabled"
                },
                "smart": {
                    "description": "Smart",
                    "$ref": "#/definitions/SmartDeviceProductsEnabled"
                },
                "cashreg": {
                    "description": "Cashreg",
                    "$ref": "#/definitions/SmartDeviceProductsEnabled"
                },
                "collect": {
                    "description": "Collect",
                    "$ref": "#/definitions/SmartDeviceProductsEnabled"
                },
                "showcase": {
                    "description": "Showcase",
                    "$ref": "#/definitions/SmartDeviceProductsEnabled"
                },
                "vtm": {
                    "description": "Vtm",
                    "$ref": "#/definitions/SmartDeviceProductsEnabled"
                },
                "prepaid": {
                    "description": "Prepaid",
                    "$ref": "#/definitions/SmartDeviceProductsPrepaid"
                }
            },
            "type": "object"
        },
        "SmartDeviceProductsEnabled": {
            "properties": {
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SmartDeviceProductsPrepaid": {
            "properties": {
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                },
                "simulate_force": {
                    "description": "Simulate force",
                    "type": "boolean"
                },
                "demo_force": {
                    "description": "Demo force",
                    "type": "boolean"
                },
                "vtc_tid": {
                    "description": "Vtc tid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmartDevicesDevice": {
            "properties": {
                "object": {
                    "description": "Object of device",
                    "type": "string"
                },
                "id": {
                    "description": "Id of device",
                    "type": "string"
                },
                "serial_number": {
                    "description": "Serial number",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmartDevicesDTO": {
            "properties": {
                "merchant": {
                    "description": "Merchant",
                    "type": "string"
                },
                "store": {
                    "description": "Store",
                    "type": "string"
                },
                "terminal": {
                    "description": "Terminal",
                    "type": "string"
                },
                "vendor": {
                    "description": "Vendor",
                    "type": "string"
                },
                "vendor_uid": {
                    "description": "Vendor uid",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "products": {
                    "description": "Products",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "base_version": {
                    "description": "Base version",
                    "type": "string"
                },
                "terminal_type": {
                    "description": "Terminal type",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmartDevicesDTOPrepaidTid": {
            "properties": {
                "tid": {
                    "description": "Tid",
                    "type": "string"
                },
                "force": {
                    "description": "Force",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SmartDevicesDTOSecubaseConfig": {
            "properties": {
                "secubaseVersion": {
                    "description": "Secubase version",
                    "type": "string"
                },
                "baseVersion": {
                    "description": "Base version",
                    "type": "string"
                },
                "oaiVersion": {
                    "description": "Oai version",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmartDevicesSecubaseConfig": {
            "properties": {
                "apps": {
                    "description": "Apps",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "logging": {
                    "description": "Logging",
                    "$ref": "#/definitions/SmartDevicesSecubaseConfigLogging"
                }
            },
            "type": "object"
        },
        "SmartDevicesSecubaseConfigLogging": {
            "properties": {
                "secubase": {
                    "description": "Secubase",
                    "$ref": "#/definitions/SmartDevicesSecubaseConfigLoggingFileNet"
                },
                "app": {
                    "description": "App",
                    "$ref": "#/definitions/SmartDevicesSecubaseConfigLoggingFileNet"
                }
            },
            "type": "object"
        },
        "SmartDevicesSecubaseConfigLoggingFileNet": {
            "properties": {
                "file": {
                    "description": "File",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "net": {
                    "description": "Net",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "SmartTransactionsProductModel": {
            "properties": {
                "object": {
                    "description": "Object of smart transaction",
                    "type": "string"
                },
                "id": {
                    "description": "Id of smart transaction",
                    "type": "string",
                    "format": "id"
                },
                "status": {
                    "description": "Status of smart transaction",
                    "type": "string"
                },
                "merchant": {
                    "description": "Merchant",
                    "$ref": "#/definitions/SmartTransactionsMerchant"
                },
                "contract": {
                    "description": "Contract",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "marketplace_contract": {
                    "description": "Marketplace contract",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "customer": {
                    "description": "Customer",
                    "$ref": "#/definitions/LoyaltyCustomersProductModel"
                },
                "checkin": {
                    "description": "Check in",
                    "$ref": "#/definitions/SmartTransactionsCheckin"
                },
                "merchantRef": {
                    "description": "Merchant ref",
                    "type": "string"
                },
                "transactionRef": {
                    "description": "Transaction ref",
                    "type": "string"
                },
                "store": {
                    "description": "Store",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "device_source": {
                    "description": "Device source",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "device_destination": {
                    "description": "Device destination",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "created": {
                    "description": "Created at date",
                    "type": "string"
                },
                "updated": {
                    "description": "Updated at date",
                    "type": "string"
                },
                "receipt_number": {
                    "description": "Receipt number",
                    "type": "integer"
                },
                "receipt": {
                    "description": "Receipt",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SmartTransactionsReceipt"
                    }
                },
                "receipt_merchant": {
                    "description": "Receipt merchant",
                    "type": "string"
                },
                "receipt_merchant_print": {
                    "description": "Receipt merchant print",
                    "type": "boolean"
                },
                "basket_info": {
                    "description": "Basket info",
                    "$ref": "#/definitions/SmartTransactionsBasketInfo"
                },
                "basket": {
                    "description": "Basket",
                    "$ref": "#/definitions/SmartTransactionsBasket"
                },
                "idents": {
                    "description": "Idents",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SmartTransactionsIdent"
                    }
                },
                "tax_rate": {
                    "description": "Tax rate",
                    "type": "integer"
                },
                "tax_amount": {
                    "description": "Tax amount",
                    "type": "integer"
                },
                "cashier": {
                    "description": "Cashier",
                    "type": "string"
                },
                "market": {
                    "description": "Market",
                    "type": "string"
                },
                "order_option": {
                    "description": "Order option",
                    "type": "string"
                },
                "pickup_options": {
                    "description": "Pickup options",
                    "$ref": "#/definitions/SmartTransactionsPickupOptions"
                },
                "product": {
                    "description": "Product",
                    "type": "string"
                },
                "trans_id": {
                    "description": "Transaction id",
                    "type": "integer"
                },
                "payment_method": {
                    "description": "Payment method",
                    "type": "string"
                },
                "transactions": {
                    "description": "Transactions",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "last_visited_page": {
                    "description": "Last visited page",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmartTransactionsPreTransactionModel": {
            "properties": {
                "missing_sum": {
                    "description": "missing sum",
                    "type": "integer"
                },
                "bonus_products": {
                    "description": "SmartTransactionsPreTransactionModel",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SmartTransactionsBonusProducts"
                    }
                }
            },
            "type": "object"
        },
        "SmartTransactionsBonusProducts": {
            "properties": {
                "id": {
                    "description": "Bonus Product ID",
                    "type": "integer"
                },
                "tax": {
                    "description": "Tax",
                    "type": "integer"
                },
                "priceOne": {
                    "description": "price of one bonus product",
                    "type": "integer"
                },
                "quantity": {
                    "description": "amount of bonus products",
                    "type": "integer"
                },
                "desc": {
                    "description": "description",
                    "type": "string"
                },
                "serialNumber": {
                    "description": "The serialnumber of the scanned posa card",
                    "type": "string"
                },
                "articleNumber": {
                    "description": "article Number",
                    "type": "string"
                },
                "ean": {
                    "description": "ean",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmartTransactionsCheckin": {
            "properties": {
                "object": {
                    "description": "Object of smart transaction check in",
                    "type": "string"
                },
                "id": {
                    "description": "Id of smart transaction check in",
                    "type": "string",
                    "format": "id"
                },
                "email": {
                    "description": "Email",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmartTransactionsBasketInfo": {
            "properties": {
                "sum": {
                    "description": "Sum",
                    "type": "integer"
                },
                "gratuity": {
                    "description": "Gratuity",
                    "type": "integer"
                },
                "currency": {
                    "description": "Currency",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmartTransactionsBasket": {
            "properties": {
                "products": {
                    "description": "Products",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SmartTransactionsBasketProduct"
                    }
                },
                "texts": {
                    "description": "Texts",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SmartTransactionsBasketText"
                    }
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmartTransactionsBasketProduct": {
            "properties": {
                "id": {
                    "description": "Product id",
                    "type": "integer"
                },
                "parent": {
                    "description": "Parent",
                    "type": "integer"
                },
                "item_type": {
                    "description": "Category of item",
                    "type": "string"
                },
                "desc": {
                    "description": "Desc",
                    "type": "string"
                },
                "articleNumber": {
                    "description": "Article number",
                    "type": "string"
                },
                "ean": {
                    "description": "international article number",
                    "type": "string"
                },
                "quantity": {
                    "description": "Quantity",
                    "type": "integer"
                },
                "priceOne": {
                    "description": "Price one",
                    "type": "integer"
                },
                "sum": {
                    "description": "it is the value of the sum of the product with all items in sub_basket",
                    "type": "integer"
                },
                "tax": {
                    "description": "Tax",
                    "type": "integer"
                },
                "reference_id": {
                    "description": "The reference_id must be unique, it's a Reference for to the reference_id of SmartTransactionsSubBasketProduct [example: SmartTransactionsBasketProduct->reference_id is 1000 then all SmartTransactionsSubBasketProduct must have unique reference_id like 1000.1, 1000.2 etc.]",
                    "type": "string"
                },
                "contract_id": {
                    "description": "contract id",
                    "type": "string"
                },
                "group": {
                    "description": "Group",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SmartTransactionsBasketProductGroup"
                    }
                },
                "sub_basket": {
                    "description": "sub basket Product",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SmartTransactionsSubBasketProduct"
                    }
                }
            },
            "type": "object"
        },
        "SmartTransactionsSubBasketProduct": {
            "properties": {
                "id": {
                    "description": "Product id",
                    "type": "integer"
                },
                "parent": {
                    "description": "Parent",
                    "type": "integer"
                },
                "item_type": {
                    "description": "Category of item",
                    "type": "string"
                },
                "desc": {
                    "description": "Description of the sub-basket product",
                    "type": "string"
                },
                "articleNumber": {
                    "description": "Article number",
                    "type": "string"
                },
                "ean": {
                    "description": "international article number",
                    "type": "string"
                },
                "quantity": {
                    "description": "Quantity",
                    "type": "integer"
                },
                "priceOne": {
                    "description": "Price one",
                    "type": "integer"
                },
                "sum": {
                    "description": "",
                    "type": "integer"
                },
                "tax": {
                    "description": "Tax",
                    "type": "integer"
                },
                "reference_id": {
                    "description": "The reference_id must be unique, it's Referring to the reference_id of SmartTransactionsBasketProduct [example: SmartTransactionsBasketProduct->reference_id is 1000 then all SmartTransactionsSubBasketProduct must have unique reference_id like 1000.1, 1000.2 etc.]",
                    "type": "string"
                },
                "contract_id": {
                    "description": "contract id",
                    "type": "string"
                },
                "group": {
                    "description": "Group",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SmartTransactionsBasketProductGroup"
                    }
                }
            },
            "type": "object"
        },
        "SmartTransactionsBasketProductGroup": {
            "properties": {
                "id": {
                    "description": "Group id",
                    "type": "string"
                },
                "desc": {
                    "description": "Desc",
                    "type": "string"
                },
                "level": {
                    "description": "Level",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SmartTransactionsBasketText": {
            "properties": {
                "id": {
                    "description": "Text id",
                    "type": "integer"
                },
                "parent": {
                    "description": "Parent",
                    "type": "integer"
                },
                "desc": {
                    "description": "Desc",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmartTransactionsIdent": {
            "properties": {
                "object": {
                    "description": "Object of smart transaction ident",
                    "type": "string"
                },
                "id": {
                    "description": "Id of smart transaction ident",
                    "type": "string",
                    "format": "id"
                },
                "prefix": {
                    "description": "Prefix",
                    "type": "string"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "valid": {
                    "description": "Valid",
                    "type": "boolean"
                },
                "merchantcard": {
                    "description": "Loyalty merchant card",
                    "$ref": "#/definitions/LoyaltyMerchantcardsProductModel"
                }
            },
            "type": "object"
        },
        "SmartTransactionsPickupOptions": {
            "properties": {
                "code": {
                    "description": "Code",
                    "type": "string"
                },
                "date": {
                    "description": "Date",
                    "type": "string"
                },
                "store": {
                    "description": "Store",
                    "$ref": "#/definitions/ProductInstanceUID"
                }
            },
            "type": "object"
        },
        "SmartTransactionsMerchant": {
            "properties": {
                "object": {
                    "description": "Object type of instance",
                    "type": "string"
                },
                "id": {
                    "description": "ID of instance",
                    "type": "string"
                },
                "companyname": {
                    "description": "Company name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmartTransactionsReceipt": {
            "properties": {
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "value": {
                    "description": "Value",
                    "$ref": "#/definitions/SmartTransactionsReceiptValue"
                }
            },
            "type": "object"
        },
        "SmartTransactionsReceiptValue": {
            "properties": {
                "caption": {
                    "description": "Caption",
                    "type": "string"
                },
                "text": {
                    "description": "Text",
                    "type": "string"
                },
                "decoration": {
                    "description": "Decoration",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmartTransactionsPrepare": {
            "properties": {
                "customer": {
                    "description": "Customer",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "container": {
                    "description": "Container",
                    "$ref": "#/definitions/ProductInstanceUID"
                }
            },
            "type": "object"
        },
        "SmartTransactionsDTO": {
            "properties": {
                "merchant": {
                    "description": "Merchant",
                    "type": "string"
                },
                "marketplace_contract": {
                    "description": "Marketplace contract",
                    "$ref": "#/definitions/ProductInstanceID"
                },
                "order_option": {
                    "description": "Order option",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "transactionRef": {
                    "description": "Transaction ref",
                    "type": "string"
                },
                "merchantRef": {
                    "description": "Merchant ref",
                    "type": "string"
                },
                "basket": {
                    "description": "Basket",
                    "$ref": "#/definitions/SmartTransactionsBasket"
                },
                "basket_info": {
                    "description": "Basket info",
                    "$ref": "#/definitions/SmartTransactionsBasketInfo"
                },
                "idents": {
                    "description": "Idents",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SmartTransactionsIdent"
                    }
                },
                "tax_amount": {
                    "description": "Tax amount",
                    "type": "integer"
                },
                "tax_rate": {
                    "description": "Tax rate",
                    "type": "integer"
                },
                "market": {
                    "description": "Market",
                    "type": "string"
                },
                "cashier": {
                    "description": "Cashier",
                    "type": "string"
                },
                "product": {
                    "description": "Product",
                    "type": "string"
                },
                "receipt": {
                    "description": "Receipt",
                    "type": "string"
                },
                "receipt_number": {
                    "description": "Receipt number",
                    "type": "integer"
                },
                "device_source": {
                    "description": "Device source",
                    "type": "string"
                },
                "trans_id": {
                    "description": "Transaction id",
                    "type": "integer"
                },
                "contract": {
                    "description": "Contract",
                    "$ref": "#/definitions/ProductInstanceID"
                },
                "pickup_options": {
                    "description": "Pickup options",
                    "$ref": "#/definitions/SmartTransactionsPickupOptions"
                },
                "last_visited_page": {
                    "description": "Last visited page",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "parameters": {
        "count": {
            "name": "count",
            "in": "query",
            "description": "The number of items to return.",
            "required": false,
            "type": "integer"
        },
        "offset": {
            "name": "offset",
            "in": "query",
            "description": "The position within the whole result set to start returning items (First element is at 0).",
            "required": false,
            "type": "integer"
        },
        "fields": {
            "name": "fields",
            "in": "query",
            "description": "List of fields to include in the result. Nested properties can be accessed with this notation: prop1.prop2  Example: prop3,prop1.prop2",
            "required": false,
            "type": "string"
        },
        "sort": {
            "name": "sort",
            "in": "query",
            "description": "String with comma separated pairs of field:order (e.g. contact.surname:asc,contact.comapnyname:desc). Result set will be sorted by included fields, in ascending 'asc', or descending 'dsc' order.",
            "required": false,
            "type": "string"
        },
        "query": {
            "name": "q",
            "in": "query",
            "description": "A query string to restrict the returned items to given conditions. The query string must consist of any combination of single expressions in the form property:condition.\n *                  A condition may contain:\n *                      - wildcard \"*\" for any number of characters\n *                      - wildcard \"?\" for one character\n *                      - ranges in the form [value TO value]\n *\n *                  Single expressions may combined by 'AND', 'OR', 'NOT' operators and parenthesis '(', ')' for grouping.\n *                  Property names can be nested like \"prop1.prop2\".\n *                  Example: (NOT customer.name:meier*) AND (customer.age:[30 TO 40] OR customer.age:[50 TO 60])\n *                  ",
            "required": false,
            "type": "string"
        }
    },
    "securityDefinitions": {
        "oauth_token": {
            "type": "oauth2",
            "flow": "application",
            "authorizationUrl": "https://connect.secucard.com/oauth/token"
        }
    },
    "security": [
        {
            "oauth_token": []
        }
    ]
}
