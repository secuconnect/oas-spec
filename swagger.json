{
    "swagger": "2.0",
    "info": {
        "title": "Secuconnect API",
        "version": "2.0.0"
    },
    "host": "connect-testing.secupay-ag.de",
    "basePath": "/api/v2/",
    "schemes": [
        "https"
    ],
    "paths": {
        "Payment/Containers": {
            "get": {
                "tags": [
                    "paymentContainers"
                ],
                "summary": "GET Payment/Containers",
                "description": "Get a list of payment containers",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of payment containers",
                        "schema": {
                            "title": "PaymentContainersList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing payment containers",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Payment/Containers",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PaymentContainersProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "paymentContainers"
                ],
                "summary": "POST Payment/Containers",
                "description": "Add new containers",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment container properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentContainersDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created payment container",
                        "schema": {
                            "$ref": "#/definitions/PaymentContainersProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Containers/{id}": {
            "get": {
                "tags": [
                    "paymentContainers"
                ],
                "summary": "GET Payment/Containers/{id}",
                "description": "Get all payment containers",
                "operationId": "paymentContainersGetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Search one by provided id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns payment container for a specific id",
                        "schema": {
                            "$ref": "#/definitions/PaymentContainersProductModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "paymentContainers"
                ],
                "summary": "PUT Payment/Containers/{id}",
                "description": "Update payment container",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment container id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment container properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentContainersDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated payment container",
                        "schema": {
                            "$ref": "#/definitions/PaymentContainersProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "paymentContainers"
                ],
                "summary": "DELETE Payment/Containers/{id}",
                "description": "Delete payment container",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment container id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted payment container",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentContainersProductModel"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Containers/{id}/assign/{secondary-id}": {
            "post": {
                "tags": [
                    "paymentContainers"
                ],
                "summary": "POST Payment/Containers/{id}/assign/{secondary-id}",
                "description": "Assign an existing payment container to ...",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment container id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "secondary-id",
                        "in": "path",
                        "description": "Id to which container will be assigned",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Affected container",
                        "schema": {
                            "$ref": "#/definitions/PaymentContainersProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "paymentContainers"
                ],
                "summary": "DELETE Payment/Containers/{id}/assign/{secondary-id}",
                "description": "Removes an existing payment container assignment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment container id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "secondary-id",
                        "in": "path",
                        "description": "Id for which container is currently assigned to",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Affected container",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentContainersProductModel"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Contracts": {
            "get": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "GET Payment/Contracts",
                "description": "Get a list of payment contracts",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of payment contracts",
                        "schema": {
                            "title": "PaymentContractsList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing payment contracts",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Payment/Contracts",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PaymentContractsProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "POST Payment/Contracts",
                "description": "Add new contract",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment contracts properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentContractsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created payment contract",
                        "schema": {
                            "$ref": "#/definitions/PaymentContractsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Contracts/{id}": {
            "get": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "GET Payment/Contracts/{id}",
                "description": "Get all payment contracts",
                "operationId": "paymentContractsGetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Search one by provided id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns payment contract for a specific id",
                        "schema": {
                            "$ref": "#/definitions/PaymentContractsProductModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "PUT Payment/Contracts/{id}",
                "description": "Update payment contract",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment contract id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment contract properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentContractsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated payment contract",
                        "schema": {
                            "$ref": "#/definitions/PaymentContractsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "DELETE Payment/Contracts/{id}",
                "description": "Delete payment contract",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment contract id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted payment contract",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentContractsProductModel"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Contracts/{id}/PaymentMethods": {
            "get": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "GET Payment/Contracts/{id}/PaymentMethods",
                "description": "Get available payment methods for given contract",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contract identifier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment methods possible for given contract",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Contracts/{id}/clone": {
            "post": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "POST Payment/Contracts/{id}/clone",
                "description": "Clone an existing payment contract",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contract identifier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated payment contract",
                        "schema": {
                            "$ref": "#/definitions/PaymentContractsProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Contracts/{id}/requestId": {
            "post": {
                "tags": [
                    "paymentContracts"
                ],
                "summary": "POST Payment/Contracts/{id}/requestId",
                "description": "This method clones your payment contract, so that you can use this to separate the merchants of your marketplace. (Needs to be activated))",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contract identifier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Proper response after cloning your payment contract",
                        "schema": {
                            "title": "PaymentContractsRequestIdResult",
                            "properties": {
                                "contract": {
                                    "description": "The payment contract object",
                                    "$ref": "#/definitions/PaymentContractsProductModel"
                                },
                                "apikey": {
                                    "description": "Returns the apikey of the created merchant",
                                    "type": "string"
                                },
                                "paying_account": {
                                    "description": "The bank account you can use for pay in.",
                                    "properties": {
                                        "accountowner": {
                                            "description": "The bank account owner",
                                            "type": "string"
                                        },
                                        "iban": {
                                            "description": "IBAN",
                                            "type": "string"
                                        },
                                        "bic": {
                                            "description": "BIC",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Customers": {
            "get": {
                "tags": [
                    "paymentCustomers"
                ],
                "summary": "GET Payment/Customers",
                "description": "Get a list of payment customers",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of payment customers",
                        "schema": {
                            "title": "PaymentCustomersList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing payment customers",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Payment/Customers",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PaymentCustomersProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "paymentCustomers"
                ],
                "summary": "POST Payment/Customers",
                "description": "Add new customer",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment customer properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentCustomersDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created payment customer",
                        "schema": {
                            "$ref": "#/definitions/PaymentCustomersProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Customers/{id}": {
            "get": {
                "tags": [
                    "paymentCustomers"
                ],
                "summary": "GET Payment/Customers/{id}",
                "description": "Get all payment customers",
                "operationId": "paymentCustomersGetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Search one by provided id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns payment customer for a specific id",
                        "schema": {
                            "$ref": "#/definitions/PaymentCustomersProductModel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "paymentCustomers"
                ],
                "summary": "PUT Payment/Customers/{id}",
                "description": "Update payment customer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment customer id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment customer properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentCustomersDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated payment customer",
                        "schema": {
                            "$ref": "#/definitions/PaymentCustomersProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "paymentCustomers"
                ],
                "summary": "DELETE Payment/Customers/{id}",
                "description": "Delete payment customer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment customer id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted payment customer",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentCustomersProductModel"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Secupaycreditcards/{hash}": {
            "get": {
                "tags": [
                    "paymentSecupayCreditcards"
                ],
                "summary": "GET Payment/Secupaycreditcards/{id}",
                "description": "Get the details of a payment transaction",
                "operationId": "paymentSecupayCreditcardsGetById",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Payment transaction ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Secupaycreditcards": {
            "post": {
                "tags": [
                    "paymentSecupayCreditcards"
                ],
                "summary": "POST Payment/Secupaycreditcards",
                "description": "Start a credit card payment transaction",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Credit card payment transaction input properties",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/SecupayTransactionProductDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    }
                }
            }
        },
        "Payment/Secupaycreditcards/{hash}/cancel": {
            "post": {
                "tags": [
                    "paymentSecupayCreditcards"
                ],
                "summary": "POST Payment/Secupaycreditcards/{id}/cancel",
                "description": "Function to cancel the transaction",
                "operationId": "paymentSecupayCreditcardsCancelById",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Transaction hash",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled successfully",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Secupaydebits/{hash}": {
            "get": {
                "tags": [
                    "paymentSecupayDebits"
                ],
                "summary": "GET Payment/Secupaydebits/{id}",
                "description": "Get the details of a payment transaction",
                "operationId": "paymentSecupayDebitsGetById",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Payment transaction ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Secupaydebits": {
            "post": {
                "tags": [
                    "paymentSecupayDebits"
                ],
                "summary": "POST Payment/Secupaydebits",
                "description": "Start a debit payment transaction",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Debit payment transaction input properties",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/SecupayTransactionProductDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Started debit payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Secupaydebits/{hash}/cancel": {
            "post": {
                "tags": [
                    "paymentSecupayDebits"
                ],
                "summary": "POST Payment/Secupaydebits/{id}/cancel",
                "description": "Function to cancel the transaction",
                "operationId": "paymentSecupayDebitsCancelById",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Transaction hash",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled successfully",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Secupayinvoices/{hash}": {
            "get": {
                "tags": [
                    "paymentSecupayInvoices"
                ],
                "summary": "GET Payment/Secupayinvoices/{id}",
                "description": "Get the details of a payment transaction",
                "operationId": "paymentSecupayInvoicesGetById",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Payment transaction ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Secupayinvoices": {
            "post": {
                "tags": [
                    "paymentSecupayInvoices"
                ],
                "summary": "POST Payment/Secupayinvoices",
                "description": "Start a invoice payment transaction",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Invoice payment transaction input properties",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/SecupayTransactionProductDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Started invoice payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Secupayinvoices/{hash}/cancel": {
            "post": {
                "tags": [
                    "paymentSecupayInvoices"
                ],
                "summary": "POST Payment/Secupayinvoices/{id}/cancel",
                "description": "Function to cancel the transaction",
                "operationId": "paymentSecupayInvoicesCancelById",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Transaction hash",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled successfully",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Secupayprepays/{hash}": {
            "get": {
                "tags": [
                    "paymentSecupayPrepays"
                ],
                "summary": "GET Payment/Secupayprepays/{id}",
                "description": "Get the details of a payment transaction",
                "operationId": "paymentSecupayPrepaysGetById",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Payment transaction ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Secupayprepays": {
            "post": {
                "tags": [
                    "paymentSecupayPrepays"
                ],
                "summary": "POST Payment/Secupayprepays",
                "description": "Start a prepay payment transaction",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Prepay payment transaction input properties",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/SecupayTransactionProductDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Started prepay payment transaction",
                        "schema": {
                            "$ref": "#/definitions/SecupayTransactionProductModel"
                        }
                    }
                }
            }
        },
        "Payment/Secupayprepays/{hash}/cancel": {
            "post": {
                "tags": [
                    "paymentSecupayPrepays"
                ],
                "summary": "POST Payment/Secupayprepays/{id}/cancel",
                "description": "Function to cancel the transaction",
                "operationId": "paymentSecupayPrepaysCancelById",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Transaction hash",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled successfully",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Canceled transaction",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Transactions": {
            "get": {
                "tags": [
                    "paymentTransactions"
                ],
                "summary": "GET Payment/Transactions",
                "description": "Get a list of payment transactions",
                "parameters": [
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of payment transactions",
                        "schema": {
                            "title": "PaymentTransactionsList",
                            "properties": {
                                "count": {
                                    "description": "Number of existing payment transactions",
                                    "type": "integer"
                                },
                                "data": {
                                    "description": "GET Payment/Transactions",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PaymentTransactionsProductModel"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "Payment/Transactions/{id}": {
            "get": {
                "tags": [
                    "paymentTransactions"
                ],
                "summary": "GET Payment/Transactions/{id}",
                "description": "Get all payment transactions",
                "operationId": "paymentTransactionsGetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Search one by provided id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list with all payment transactions",
                        "schema": {
                            "$ref": "#/definitions/PaymentTransactionsProductModel"
                        }
                    }
                }
            }
        },
        "Payment/Transactions/{id}/cancel": {
            "post": {
                "tags": [
                    "paymentTransactions"
                ],
                "summary": "POST Payment/Transactions/{id}/cancel",
                "description": "Cancel a payment transaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction identifier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Canceled payment transactions",
                        "schema": {
                            "description": "list of canceled payment transactions",
                            "type": "array",
                            "items": {
                                "title": "PaymentTransactionsCancelList",
                                "properties": {
                                    "count": {
                                        "description": "Count of returned payment contracts",
                                        "type": "integer"
                                    },
                                    "data": {
                                        "description": "POST Payment/Transactions/{id}/cancel",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/definitions/PaymentTransactionsProductModel"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        },
        "Payment/Transactions/{id}/ShippingUrl": {
            "get": {
                "tags": [
                    "paymentTransactions"
                ],
                "summary": "GET Payment/Transactions/{id}/ShippingUrl",
                "description": "Get the url where you can fill the shipping information",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction identifier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The url of the shipping information form",
                        "schema": {
                            "title": "PaymentTransactionsShippingUrl",
                            "properties": {
                                "url": {
                                    "description": "The url of the shipping information form",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Response related to the error",
                        "schema": {
                            "$ref": "#/definitions/ProductExceptionPayload"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ProductInstanceUID": {
            "description": "Product name and instance id, uniquely identifying instance of Product",
            "properties": {
                "object": {
                    "description": "Object type of instance",
                    "type": "string"
                },
                "id": {
                    "description": "ID of instance",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Address": {
            "description": "Address",
            "properties": {
                "street": {
                    "description": "Street",
                    "type": "string"
                },
                "street_number": {
                    "description": "Street number",
                    "type": "string"
                },
                "city": {
                    "description": "City",
                    "type": "string"
                },
                "postal_code": {
                    "description": "Postal code",
                    "type": "string"
                },
                "country": {
                    "description": "Country",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProductExceptionPayload": {
            "description": "Payload of exceptions returned by API",
            "properties": {
                "status": {
                    "description": "Request status (always equals to 'error')",
                    "type": "string"
                },
                "error": {
                    "description": "Error type identifier",
                    "type": "string"
                },
                "error_details": {
                    "description": "Error details",
                    "type": "string"
                },
                "error_user": {
                    "description": "Error details in German",
                    "type": "string"
                },
                "code": {
                    "description": "HTTP code corresponding to error",
                    "type": "string"
                },
                "supportId": {
                    "description": "ID by which support team can relate error with action(s) that caused it",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PaymentContainersProductModel": {
            "properties": {
                "object": {
                    "description": "Object of payment container",
                    "type": "string"
                },
                "id": {
                    "description": "Id of payment container",
                    "type": "string",
                    "format": "id"
                },
                "contract": {
                    "description": "Payment container contract",
                    "$ref": "#/definitions/PaymentContractsProductModel"
                },
                "customer": {
                    "description": "Payment container customer",
                    "$ref": "#/definitions/PaymentCustomersProductModel"
                },
                "assign": {
                    "description": "Assign to",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "type": {
                    "description": "Type of payment container",
                    "type": "string"
                },
                "public": {
                    "description": "Public payment instrument data",
                    "$ref": "#/definitions/BankAccountDescriptor"
                },
                "private": {
                    "description": "Private payment instrument data",
                    "$ref": "#/definitions/BankAccountDescriptor"
                },
                "created": {
                    "description": "Creation date",
                    "type": "string",
                    "format": "date-time"
                },
                "updated": {
                    "description": "Last update date",
                    "type": "string",
                    "format": "date-time"
                },
                "mandate": {
                    "description": "Payment container mandate",
                    "$ref": "#/definitions/PaymentContainerMandate"
                }
            },
            "type": "object"
        },
        "PaymentContainersDTO": {
            "properties": {
                "customer": {
                    "description": "The customer of this payment container",
                    "properties": {
                        "id": {
                            "description": "Customer identifier",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "description": "Type of Payment Containers",
                    "type": "string"
                },
                "private": {
                    "description": "",
                    "properties": {
                        "owner": {
                            "description": "PaymentContainersDTO",
                            "type": "string"
                        },
                        "iban": {
                            "description": "PaymentContainersDTO",
                            "type": "string"
                        },
                        "bic": {
                            "description": "PaymentContainersDTO",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "BankAccountDescriptor": {
            "description": "Bank account data like owner, iban, bic and bank name",
            "properties": {
                "owner": {
                    "description": "Owner",
                    "type": "string"
                },
                "iban": {
                    "description": "IBAN",
                    "type": "string"
                },
                "bic": {
                    "description": "BIC",
                    "type": "string"
                },
                "bankname": {
                    "description": "Bank name",
                    "type": "string"
                }
            }
        },
        "PaymentContainerMandate": {
            "properties": {
                "sepa_mandate_id": {
                    "description": "Sepa mandate id",
                    "type": "string"
                },
                "iban": {
                    "description": "IBAN",
                    "type": "string"
                },
                "bic": {
                    "description": "BIC",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "identification": {
                    "description": "Identification",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PaymentContractsProductModel": {
            "properties": {
                "object": {
                    "description": "Object of payment contract",
                    "type": "string",
                    "example": "payment.contracts"
                },
                "id": {
                    "description": "Id of payment contract",
                    "type": "string",
                    "format": "id",
                    "example": "PCR_W8VVN3QCN2M7690ZR5GQGH5YJNVVAU"
                },
                "parent": {
                    "description": "Payment contract",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "demo": {
                    "description": "Is this a demo contract",
                    "type": "boolean"
                },
                "allow_cloning": {
                    "description": "Allow to create sub-contracts",
                    "type": "boolean"
                },
                "sepa_mandate_inform": {
                    "description": "Inform the customer about the created sepa mandate",
                    "type": "string",
                    "default": "never",
                    "example": "never"
                },
                "created": {
                    "description": "Created at date",
                    "type": "string",
                    "format": "date-time"
                },
                "updated": {
                    "description": "Updated at date",
                    "type": "string",
                    "format": "date-time"
                }
            },
            "type": "object"
        },
        "PaymentContractsDTO": {
            "properties": {
                "merchant": {
                    "description": "Contracts Merchant",
                    "type": "string"
                },
                "internal_reference": {
                    "description": "The internal user id",
                    "type": "string"
                },
                "contract_id": {
                    "description": "Contracts id",
                    "type": "string"
                },
                "demo": {
                    "description": "Is this a demo contract",
                    "type": "string"
                },
                "debit_product_id": {
                    "description": "Contract debit product id",
                    "type": "string"
                },
                "prepay_product_id": {
                    "description": "Contracts prepay product id",
                    "type": "string"
                },
                "invoice_product_id": {
                    "description": "Contracts invoice product id",
                    "type": "string"
                },
                "creditcard_product_id": {
                    "description": "Contracts credit card product id",
                    "type": "string"
                },
                "url_push": {
                    "description": "An URL where your service listen for push notifications of the secuconnect service",
                    "type": "string"
                },
                "allow_transactions": {
                    "description": "Should allow transactions?",
                    "type": "boolean"
                },
                "allow_cloning": {
                    "description": "Should allow cloning?",
                    "type": "boolean"
                },
                "unique_order_id": {
                    "description": "Bool, default FALSE. If TRUE, an error message will be thrown if you try to create a new payment transaction with the same order_id of an previous transaction.",
                    "type": "boolean"
                },
                "scoring": {
                    "description": "Bool, default TRUE. If FALSE, the customer scoring is disabled for your payment contract",
                    "type": "boolean"
                },
                "sepa_mandate_inform": {
                    "description": "Enum [on_transaction, on_container, never], default \u201cnever\u201d Option to send automatically an information to the customer when a new SEPA-mandate was created.",
                    "type": "string"
                }
            }
        },
        "PaymentCustomersProductModel": {
            "properties": {
                "object": {
                    "description": "Object of payment customer",
                    "type": "string"
                },
                "id": {
                    "description": "Id of payment customer",
                    "type": "string",
                    "format": "id"
                },
                "contract": {
                    "description": "Payment contract",
                    "$ref": "#/definitions/ProductInstanceUID"
                },
                "contact": {
                    "description": "Customer contact info",
                    "$ref": "#/definitions/PaymentCustomersDTOContact"
                },
                "created": {
                    "description": "Created at date",
                    "type": "string",
                    "format": "date-time"
                },
                "updated": {
                    "description": "Updated at date",
                    "type": "string",
                    "format": "date-time"
                }
            },
            "type": "object"
        },
        "PaymentCustomersDTO": {
            "properties": {
                "contact": {
                    "description": "PaymentCustomersDTO",
                    "type": "object",
                    "$ref": "#/definitions/PaymentCustomersDTOContact"
                }
            },
            "type": "object"
        },
        "PaymentCustomersDTOContact": {
            "properties": {
                "forename": {
                    "description": "Customer forename",
                    "type": "string"
                },
                "surname": {
                    "description": "Customer surname",
                    "type": "string"
                },
                "companyname": {
                    "description": "Customer company name",
                    "type": "string"
                },
                "salutation": {
                    "description": "Customer salutation",
                    "type": "string"
                },
                "gender": {
                    "description": "Customer gender",
                    "type": "string"
                },
                "title": {
                    "description": "Customer title",
                    "type": "string"
                },
                "email": {
                    "description": "Customer email",
                    "type": "string"
                },
                "phone": {
                    "description": "Customer phone",
                    "type": "string"
                },
                "mobile": {
                    "description": "Customer mobile",
                    "type": "string"
                },
                "dob": {
                    "description": "Date of birth '/^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}[+-]\\d{2}:\\d{2})?$/i'",
                    "type": "string"
                },
                "picture": {
                    "description": "The document id of an user picture (To upload the picture use our document service.)",
                    "type": "string"
                },
                "url_website": {
                    "description": "URL to customer website",
                    "type": "string"
                },
                "birthplace": {
                    "description": "Customer birthplace",
                    "type": "string"
                },
                "nationality": {
                    "description": "Customer nationality",
                    "type": "string"
                },
                "address": {
                    "description": "Customer address",
                    "type": "object",
                    "$ref": "#/definitions/Address"
                }
            },
            "type": "object"
        },
        "SecupayTransactionProductModel": {
            "properties": {
                "object": {
                    "description": "Product name",
                    "type": "string"
                },
                "id": {
                    "description": "ID of instance",
                    "type": "string"
                },
                "trans_id": {
                    "description": "Transaction identifier",
                    "type": "integer"
                },
                "status": {
                    "description": "Transaction status",
                    "type": "string"
                },
                "amount": {
                    "description": "Total amount of payment in cents (or the smallest cash unit of the relevant currency)",
                    "type": "integer"
                },
                "currency": {
                    "description": "ISO 4217 code of currency, eg EUR for Euro.",
                    "type": "string"
                },
                "purpose": {
                    "description": "The purpose of the payment. This is the later assignment of the payment is for example on the account statement of the buyer.",
                    "type": "string"
                },
                "order_id": {
                    "description": "Specifying an order number. Depending on the contract setting, this must be unique for each payment.",
                    "type": "string"
                },
                "basket": {
                    "description": "A list of items that are being purchased.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecupayBasketItem"
                    }
                },
                "transaction_status": {
                    "description": "Transaction status (number)",
                    "type": "string"
                },
                "accrual": {
                    "description": "Indicates whether the payment is locked for pay-out (TRUE) or not (FALSE). Standard value here is FALSE.",
                    "type": "boolean"
                },
                "payment_action": {
                    "description": "Specifies whether a pre-authorization (\"authorization\") or instant payment ( \"sale\") is to be performed. Standard value here is \"sale\". The collection of the pre-authorized payment is made with the \"capture\" command.",
                    "type": "string"
                },
                "transfer_purpose": {
                    "description": "The purpose the payer needs to use for his transfer",
                    "type": "string"
                },
                "transfer_account": {
                    "description": "The bank account the payer needs to use for his transfer",
                    "properties": {
                        "iban": {
                            "description": "IBAN",
                            "type": "string"
                        },
                        "bic": {
                            "description": "BIC",
                            "type": "string"
                        },
                        "accountnumber": {
                            "description": "Bank account number",
                            "type": "string"
                        },
                        "bankcode": {
                            "description": "The name of the bank institute",
                            "type": "string"
                        },
                        "account_owner": {
                            "description": "The owner of bank account",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "customer": {
                    "description": "The customer object",
                    "type": "object",
                    "$ref": "#/definitions/PaymentCustomersProductModel"
                },
                "used_payment_instrument": {
                    "description": "The payment data which has the payer used (like bank account, credit card, ...). This data is always masked.",
                    "properties": {
                        "type": {
                            "description": "The type of the payment instrument data, like: 'bank_account' or 'credit_card'",
                            "type": "string"
                        },
                        "data": {
                            "description": "Holds the payment instrument data",
                            "type": "object",
                            "$ref": "#/definitions/BankAccountDescriptor"
                        }
                    },
                    "type": "object"
                },
                "redirect_url": {
                    "description": "A list of redirect urls used for the payment checkout page",
                    "properties": {
                        "iframe_url": {
                            "description": "The url of the payment checkout iframe",
                            "type": "string"
                        },
                        "url_success": {
                            "description": "After successfully entering the cash data of the payer is returned to this page.",
                            "type": "string"
                        },
                        "url_failure": {
                            "description": "After canceling or on errors the payer will be redirected to this page and can select there an another payment method.",
                            "type": "string"
                        },
                        "url_push": {
                            "description": "The secupay system will be send status change notifications to this URL.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "iframe_url": {
                    "description": "The url of the payment checkout iframe",
                    "type": "string"
                },
                "container": {
                    "description": "The container object",
                    "type": "object",
                    "$ref": "#/definitions/PaymentContainersProductModel"
                }
            },
            "type": "object"
        },
        "SecupayTransactionProductDTO": {
            "properties": {
                "amount": {
                    "description": "Total amount of payment in cents (or the smallest cash unit of the relevant currency)",
                    "type": "integer"
                },
                "currency": {
                    "description": "ISO 4217 code of currency, eg EUR for Euro.",
                    "type": "string"
                },
                "purpose": {
                    "description": "The purpose of the payment. This is the later assignment of the payment is for example on the account statement of the buyer.",
                    "type": "string"
                },
                "order_id": {
                    "description": "Specifying an order number. Depending on the contract setting, this must be unique for each payment.",
                    "type": "string"
                },
                "basket": {
                    "description": "A list of items that are being purchased.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecupayBasketItem"
                    }
                },
                "accrual": {
                    "description": "Indicates whether the payment is locked for pay-out (TRUE) or not (FALSE). Standard value here is FALSE.",
                    "type": "boolean"
                },
                "payment_action": {
                    "description": "Specifies whether a pre-authorization (\"authorization\") or instant payment (\"sale\") is to be performed. Standard value here is \"sale\". The collection of the pre-authorized payment is made with the \"capture\" command.",
                    "type": "string"
                },
                "customer": {
                    "description": "The customer object",
                    "type": "object",
                    "$ref": "#/definitions/PaymentCustomersDTO"
                },
                "redirect_url": {
                    "description": "A list of redirect urls used for the payment checkout page",
                    "properties": {
                        "url_success": {
                            "description": "After successfully entering the cash data of the payer is returned to this page.",
                            "type": "string"
                        },
                        "url_failure": {
                            "description": "After canceling or on errors the payer will be redirected to this page and can select there an another payment method.",
                            "type": "string"
                        },
                        "url_push": {
                            "description": "The secupay system will be send status change notifications to this URL.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "contract": {
                    "description": "Contract id",
                    "type": "string"
                },
                "container": {
                    "description": "Container id",
                    "type": "string"
                },
                "opt_data": {
                    "description": "Options for customizing the checkout page",
                    "properties": {
                        "has_accepted_disclaimer": {
                            "description": "Customer accepted disclaimer",
                            "type": "string"
                        },
                        "language": {
                            "description": "Client language",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "subscription": {
                    "description": "Recurring payments",
                    "properties": {
                        "purpose": {
                            "description": "The purpose of the subscription",
                            "type": "string"
                        },
                        "id": {
                            "description": "Id of subscription, if exists",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "demo": {
                    "description": "Demo",
                    "type": "bool"
                },
                "experience": {
                    "description": "Customer experience score",
                    "properties": {
                        "positive": {
                            "description": "Score of positive experience (paid orders)",
                            "type": "integer"
                        },
                        "negative": {
                            "description": "Score of negative experience (open/unpaid orders)",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SecupayBasketItem": {
            "description": "Item describing single position in basket in transaction",
            "properties": {
                "item_type": {
                    "description": "Category of item",
                    "type": "string"
                },
                "article_number": {
                    "description": "Article number, if item is of article category",
                    "type": "string"
                },
                "quantity": {
                    "description": "Quantity of articles in item",
                    "type": "integer"
                },
                "name": {
                    "description": "Descriptive name of item",
                    "type": "string"
                },
                "model": {
                    "description": "Model of item",
                    "type": "string"
                },
                "ean": {
                    "description": "EAN, European Article Number",
                    "type": "string"
                },
                "tax": {
                    "description": "Applicable tax in percentages",
                    "type": "string"
                },
                "total": {
                    "description": "Total price",
                    "type": "integer"
                },
                "price": {
                    "description": "Price of single article, if item is of article category",
                    "type": "integer"
                },
                "apikey": {
                    "description": "Special param for stakeholder payments",
                    "type": "string"
                },
                "transaction_hash": {
                    "description": "Special param for payout payments",
                    "type": "string"
                },
                "contract_id": {
                    "description": "Contract id - Special param for stakeholder payments",
                    "type": "string"
                }
            }
        },
        "PaymentTransactionsProductModel": {
            "properties": {
                "object": {
                    "description": "Object of payment transaction",
                    "type": "string"
                },
                "id": {
                    "description": "Id of payment transaction",
                    "type": "string",
                    "format": "id"
                },
                "merchant": {
                    "description": "Merchant information",
                    "properties": {
                        "object": {
                            "description": "Type of product",
                            "type": "string"
                        },
                        "id": {
                            "description": "Identifier of product",
                            "type": "string"
                        },
                        "type": {
                            "description": "Type of merchant",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "trans_id": {
                    "description": "Transaction identifier",
                    "type": "integer"
                },
                "product_id": {
                    "description": "Product identifier",
                    "type": "integer"
                },
                "product": {
                    "description": "Product type",
                    "type": "string"
                },
                "product_raw": {
                    "description": "the name of the payment product",
                    "type": "string"
                },
                "zahlungsmittel_id": {
                    "description": "The internal id of the stored payment instrument.",
                    "type": "integer"
                },
                "contract_id": {
                    "description": "Contract identifier",
                    "type": "integer"
                },
                "amount": {
                    "description": "Total amount of payment in cents (or the smallest cash unit of the relevant currency)",
                    "type": "integer"
                },
                "currency": {
                    "description": "ISO 4217 code of currency, eg EUR for Euro.",
                    "type": "string"
                },
                "created": {
                    "description": "Created at date",
                    "type": "string",
                    "format": "date-time"
                },
                "updated": {
                    "description": "Updated at date",
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "description": "WTF??",
                    "type": "integer"
                },
                "status_text": {
                    "description": "Transaction status",
                    "type": "string"
                },
                "details": {
                    "description": "Transaction details",
                    "properties": {
                        "amount": {
                            "description": "Total amount of payment in cents (or the smallest cash unit of the relevant currency)",
                            "type": "integer"
                        },
                        "cleared": {
                            "description": "Clearing status",
                            "type": "string"
                        },
                        "status": {
                            "description": "Transaction status ID",
                            "type": "integer"
                        },
                        "status_text": {
                            "description": "Transaction status description",
                            "type": "string"
                        },
                        "status_simple": {
                            "description": "Transaction simple-status ID",
                            "type": "integer"
                        },
                        "status_text_simple": {
                            "description": "Transaction simple-status description",
                            "type": "string"
                        },
                        "description": {
                            "description": "Transaction description",
                            "type": "string"
                        },
                        "description_raw": {
                            "description": "Transaction description (plain text)",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "customer": {
                    "description": "PaymentTransactionsProductModel",
                    "properties": {
                        "object": {
                            "description": "Customer type name",
                            "type": "string"
                        },
                        "id": {
                            "description": "Id of customer",
                            "type": "string",
                            "format": "id"
                        },
                        "companyname": {
                            "description": "Customer company name",
                            "type": "string"
                        },
                        "salutation": {
                            "description": "Customer salutation",
                            "type": "string"
                        },
                        "title": {
                            "description": "Customer title",
                            "type": "string"
                        },
                        "forename": {
                            "description": "Customer forename",
                            "type": "string"
                        },
                        "surname": {
                            "description": "Customer surname",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        }
    },
    "parameters": {
        "count": {
            "name": "count",
            "in": "query",
            "description": "The number of items to return.",
            "required": false,
            "type": "integer"
        },
        "offset": {
            "name": "offset",
            "in": "query",
            "description": "The position within the whole result set to start returning items (First element is at 0).",
            "required": false,
            "type": "integer"
        },
        "fields": {
            "name": "fields",
            "in": "query",
            "description": "List of fields to include in the result. Nested properties can be accessed with this notation: prop1.prop2  Example: prop3,prop1.prop2",
            "required": false,
            "type": "string"
        },
        "sort": {
            "name": "sort",
            "in": "query",
            "description": "String with comma separated pairs of field:order (e.g. contact.surname:asc,contact.comapnyname:desc). Result set will be sorted by included fields, in ascending 'asc', or descending 'dsc' order.",
            "required": false,
            "type": "string"
        },
        "query": {
            "name": "q",
            "in": "query",
            "description": "A query string to restrict the returned items to given conditions. The query string must consist of any combination of single expressions in the form property:condition.\r\n *                  A condition may contain:\r\n *                      - wildcard \"*\" for any number of characters\r\n *                      - wildcard \"?\" for one character\r\n *                      - ranges in the form [value TO value]\r\n *\r\n *                  Single expressions may combined by 'AND', 'OR', 'NOT' operators and parenthesis '(', ')' for grouping.\r\n *                  Property names can be nested like \"prop1.prop2\".\r\n *                  Example: (NOT customer.name:meier*) AND (customer.age:[30 TO 40] OR customer.age:[50 TO 60])\r\n *                  ",
            "required": false,
            "type": "string"
        }
    },
    "securityDefinitions": {
        "oauth_token": {
            "type": "oauth2",
            "flow": "application",
            "authorizationUrl": "https://connect-testing.secupay-ag.de/oauth/token"
        }
    },
    "security": [
        {
            "oauth_token": []
        }
    ]
}